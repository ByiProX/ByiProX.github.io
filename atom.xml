<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Quentin&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kunxiang.wang/"/>
  <updated>2019-04-23T16:24:53.773Z</updated>
  <id>http://kunxiang.wang/</id>
  
  <author>
    <name>ByiProX</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>书信类作文高分冲刺</title>
    <link href="http://kunxiang.wang/2019/04/24/%E4%B9%A6%E4%BF%A1%E7%B1%BB%E4%BD%9C%E6%96%87%E9%AB%98%E5%88%86%E5%86%B2%E5%88%BA/"/>
    <id>http://kunxiang.wang/2019/04/24/书信类作文高分冲刺/</id>
    <published>2019-04-23T16:23:03.000Z</published>
    <updated>2019-04-23T16:24:53.773Z</updated>
    
    <content type="html"><![CDATA[<h1 id="书信类作文高分冲刺"><a href="#书信类作文高分冲刺" class="headerlink" title="书信类作文高分冲刺"></a>书信类作文高分冲刺</h1><blockquote><ul><li><strong>一、写作标准</strong></li><li><strong>二、书信分类</strong></li><li><strong>三、写作结构</strong></li><li><strong>四、套路+套话</strong></li></ul></blockquote><h2 id="一、写作标准"><a href="#一、写作标准" class="headerlink" title="一、写作标准"></a>一、写作标准</h2><ul><li style="list-style: none"><input type="checkbox" checked> <strong>内容要全面</strong> (少了要点会扣分）</li><li style="list-style: none"><input type="checkbox" checked> <strong>书写要整洁</strong> (人靠衣装马靠鞍)</li><li style="list-style: none"><input type="checkbox" checked> <strong>结构要清晰</strong> (逻辑框架)</li><li style="list-style: none"><input type="checkbox" checked> <strong>语言要精彩</strong> (脱颖而出)</li></ul><p>【警惕！警惕！】一定不能犯前功尽弃、功亏一篑的<code>低级错误</code>!!!</p><p> 如： <del>can did; he do it; he<-->she不分</--></del>…</p><blockquote><p><strong>高分作文的5大法宝</strong></p></blockquote><ol><li><strong>卷面</strong>：清楚、整洁</li><li><strong>内容</strong>：全面、有效</li><li><strong>分段</strong>：开头段、中间段、结尾段</li><li><strong>过渡词</strong>：首先、其次、然后…</li><li><strong>遣词造句</strong>：语言质量</li></ol><ul><li><p>[ ] <strong>过渡词讲解</strong></p></li><li><p><code>分两点解释主题</code></p><p>主题句. For one thing, 拓展句一. For another, 拓展句二.</p><p>主题句. On the one hand, 拓展句一. On the other hand, 拓展句二.</p></li><li><p><code>分三点解释主题</code></p><p>主题句. First and foremost, 拓展句一. Additionally, 拓展句二. Last but (certainly) not least, 拓展句三.</p></li></ul><ul><li><p><code>分四点解释主题</code></p><p>主题句. To begin with, 拓展句一. Besides, 拓展句二. What’s more, 拓展句三. Finally, 拓展句四.</p></li><li><p><code>换段落、换话题</code></p><p>By the way, …</p></li></ul><ul><li><p>[ ] <strong>遣词造句讲解</strong></p></li><li><p><code>如何造句</code></p><p> a. 找主语–&gt;找谓语–&gt;完善基本句子和句意</p><p> b. 进行适当的升级（前红花，后绿叶）</p><ul><li><p>[x]<strong>红花</strong></p><p>It is clear that…</p><p>It is obvious that…</p><p>There is no doubt that…</p><p>No one can deny…</p><p>Needless to say,…</p><p>It goes without saying that…</p></li><li><p>[x]<strong>绿叶</strong></p><p><strong>因为/以防/所以/为了/如果/只要/这件事</strong></p><p>（想想你学的9种状语从句，时间、地点、原因、条件、让步、比较、结果、目的、方式。更不用说不仅限于用状语从句，怎么会没得写、不高级呢！）</p></li></ul></li></ul><pre><code>..., in case...           ...,for fear that...     ...; therefore,......; as a result,...         ...; consequently,...    ...; accordingly,......, so that...             ..., in order that...    ..., if......, as long as...           ..., which...</code></pre><p>【例如：学习英语的重要性。】</p><p>No one can deny English is important, in that it is necessary in the modern world. First and foremost, needless to say, we need English for examinations, so that we can go to better universities. Additionally, it is obvious that we may communicate with foreigners in our future career; as a result, we need this beautiful language as our tool. Last but certainly not least, there is no doubt that we can read English books or enjoy English songs and movies, which are not only meaningful but also entertaining.</p><p>总之，红花绿叶，让你永远有的写，写的赞！</p><p>因此，拿到一篇作文：</p><p>第一步: 读题、圈要点、分段落；</p><p>第二步: 翻译要点（要点—&gt;句子—&gt;升级）；</p><p>第三步: 连句成文（分段、过渡词）。</p><h2 id="二、书信作文分类"><a href="#二、书信作文分类" class="headerlink" title="二、书信作文分类"></a>二、书信作文分类</h2><p>【写信目的；10种；常考6种】</p><p><code>邀请信/申请信/求助信/建议信/咨询信/告知信/感谢信/道歉信/祝贺信/投诉信</code></p><p>  （晴晴 求见 自告 感到 猪头）</p><p>【以历年全国I卷为例】</p><p>2010年–2018年 9次考试：</p><p>建议信18、告知信17（两次）、求助信16（两次）、邀请信15（两次）、咨询信14、告知信13、申请信12、求助信11、邀请信10</p><ul><li style="list-style: none"><input type="checkbox" checked> <strong>【2018年】建议信</strong></li></ul><p>假定你是李华，你的新西兰朋友Terry将去中国朋友家做客，发邮件向你<strong>询问</strong>有关习俗。<br>请你回复邮件，内容包括：1．到达时间 2．合适的礼物3．餐桌礼仪。</p><ul><li style="list-style: none"><input type="checkbox" checked> <strong>【2017年】告知信</strong></li></ul><p>假定你是李华，正在教你的英国朋友Leslie学习汉语。请你写封邮件<strong>告知</strong>下次上课的计划。内容包括：<br>（1）时间和地点；（2）内容：学习唐诗；（3）课前准备：简要了解唐朝的历史。</p><ul><li style="list-style: none"><input type="checkbox" checked> <strong>【2016年】求助信</strong></li></ul><p>假定你是李华，暑假想去一家外贸公司兼职，已写好申请书和个人简历（resume）。给外教Mr Jenkins 写信，<strong>请她帮你</strong>修改所附材料的文字和格式（format）。</p><ul><li style="list-style: none"><input type="checkbox" checked> <strong>【2015年】邀请信</strong></li></ul><p>假定你是李华，你校英文报“外国文化”栏目拟刊登美国节日风俗和中学生生活的短文。请给美国朋友彼得写信<strong>约稿</strong>，要点如下：<br>1.栏目介绍；2.稿件内容；3.稿件长度：约400词汇；4.交稿日期：6月28日前</p><ul><li style="list-style: none"><input type="checkbox" checked> <strong>【2014年】咨询信</strong></li></ul><p>假如你是李华，计划暑假期间去英国学习英语为期六周。下面的广告引起了你的注意。请给该校写一封信，<strong>询问</strong>有关情况。（箭头所指内容）</p><ul><li style="list-style: none"><input type="checkbox" checked> <strong>【2013年】告知信</strong></li></ul><p>假如你是李华，请你给笔友Peter写封信，<strong>告诉</strong>他你叔叔李明将去他所在的城市开会，带去他想要的那幅画，同时<strong>询问</strong>他是否可以接机，信中还说明：李明：高个子、戴眼镜。航班号:CA985<br>。 到达:8月6日上午11：30。</p><ul><li style="list-style: none"><input type="checkbox" checked> <strong>【2012年】申请信</strong></li></ul><p>假定你是李华，从互联网上得知一个国际中学生组织将在新加坡(Singapore)举办夏令营，欢迎各国学生参加。请写一封电子邮件<strong>申请</strong>参加。<br>内容主要包括：1.自我介绍(包括英语能力)；2.参加意图(介绍中国、了解其他国家)；3.希望获准。</p><ul><li style="list-style: none"><input type="checkbox" checked> <strong>【2011年】求助信</strong></li></ul><p>假定你是李华，正在一所英国学校学习暑期课程，遇到一些困难，希望得到学校辅导中心（Learning Center）的<strong>帮助</strong>。根据学校规定，你须书面预约，请按下列要点写一封信：<br>1.本人简介；2.求助内容；3.约定时间；4.你的联系方式（Email:<a href="mailto:lihua@126.com" target="_blank" rel="noopener">lihua@126.com</a>;Phone:12345678）</p><ul><li style="list-style: none"><input type="checkbox" checked> <strong>【2010年】邀请信</strong></li></ul><p>假设你是育才中学学生会主席李华。你校将举办一次英语演讲比赛（speech contest），希望附近某大学的外籍教师Smith女士<strong>来做评委</strong>。请参照以下比赛通知给她写一封信。</p><table><thead><tr><th>英语演讲比赛</th></tr></thead><tbody><tr><td>主题：人与自然</td></tr><tr><td>时间：6月15日下午2：00－5：00</td></tr><tr><td>地点：501教室</td></tr><tr><td>参赛选手：10名学生</td></tr><tr><td>联系人：李华（电话44876655）</td></tr><tr><td>欢迎大家光临</td></tr></tbody></table><h2 id="三、写作结构"><a href="#三、写作结构" class="headerlink" title="三、写作结构"></a>三、写作结构</h2><p><code>整体结构：开头段（1段）、中间段（1-2段）、结尾段（1段）</code></p><ol><li><p><strong>开头段</strong></p><p>①问候；</p><p>②自我介绍（根据具体需要）；</p><p>③写信背景（为什么要写这封信，如：外国朋友要参加唱中国歌比赛）；</p><p>④写信目的（想要达成什么目的，如：推荐对方一首汉语歌）。</p></li><li><p><strong>中间段</strong></p><p>中间段1，核心要点1，核心要点1的3个拓展；</p><p> (如果需要，中间段2，核心要点2，核心要点2的3个拓展)。</p></li><li><p><strong>结尾段</strong></p><p>客套话：感谢或致歉、表达愿望、必要的补充说明、期待回信等。</p></li></ol><h2 id="四、套路-套话"><a href="#四、套路-套话" class="headerlink" title="四、套路+套话"></a>四、套路+套话</h2><blockquote><ul><li>开头段：问候+自我介绍+写信背景+写信目的</li><li>中间段：主题句 + 1… + 2… + 3…  (每个中间段写一个主题)</li><li>结尾段：补充说明+客套话</li></ul></blockquote><ul><li><p>[ ] <strong>开头段四要素的写法</strong></p><ol><li><p><strong>问候：</strong></p><pre><code>a. How are you doing?b. How is everything going?c. Greetings from China！d. Happy New Year!e. How time flies! It has been a long time since we met last time.</code></pre></li><li><p><strong>自我介绍</strong></p><p><code>一句话介绍完所有信息：姓名、性别、年龄、学历、兴趣、爱好等。</code></p><p>I’m Li Hua, a 17-year-old teenager/boy/girl currently studying in a ××× middle school, who is crazy about×××/ who is interested in ×××.</p><p>（同位语的应用；同位语：用名词解释名词。）</p></li><li><p><strong>写信背景（是什么我要想起给您写信）</strong></p><pre><code>a. Recently, I have learned that...b. Recently, I have learned in your micro-blog /Twitter /Facebook that...c. Recently, I had a dinner in your restaurant.d. Recently, an English speech contest will be held in our school.(但凡提到举办活动，一定要用被动语态)</code></pre></li><li><p><strong>写信目的(写信最终是要做什么)</strong></p><p>A. 邀请信 to invite you to join us as our honored guest / judge / instructor</p><p>B. 申请信 to apply for the job position / post / opportunity</p><p>C. 咨询性 to ask you some relevant questions</p><p>D. 告知信 to inform you of some relevant details</p><p>E. 求助信 to turn to you for help / to ask you to do me a favor</p><p>F. 建议信 to give you a hand / to give you some sincere suggestions</p><p>G. 感谢信 to deliver my heartfelt gratitude to you</p><p>H. 道歉信 to deliver my heartfelt apology to you</p><p>I. 祝贺信 to deliver my heartfelt congratulations to you</p><p>J. 投诉抱怨信 to express my complaint and give you some sincere suggestions</p></li></ol></li></ul><ul><li style="list-style: none"><input type="checkbox"> <strong>结尾段的写法</strong></li></ul><pre><code>【补充说明】 By the way,... 顺便一说, ...【客套话】我希望 Hopefully, sb. would do sth.我相信 I have the confidence that...做决定 Please drop me a line to let me know your decision soon.请回信 I am looking forward to your earliest reply. / I am looking forward to your reply at your earliest convenience.</code></pre><ul><li><p>[ ] <strong>中间段的写法</strong></p><p>  10种书信就有10种写法。</p><p>  首先，记住和复习一下中间段的结构：</p><p>  <code>主题句 + (1... + 2... + 3...)</code></p><p> 接下来，具体展开10种书信中间段的具体写法。</p><p> 最重要的是：<strong>把话说清楚、说漂亮</strong>。（逻辑）</p></li></ul><h2 id="一、邀请信"><a href="#一、邀请信" class="headerlink" title="一、邀请信"></a>一、邀请信</h2><p>【开头段】</p><p> So, on behalf of ×××, I am writing to invite you to join us as our honored guest / judge / instructor.</p><p>【中间段】</p><p>（描述活动的具体内容: 主题、意义、时间、地点、参加者等）</p><p>   【主题句】</p><p>   Here are some details for the activity.<br>   The following are some details about this activity.</p><p>   【拓展句】</p><p>   活动的主题和意义：The theme of the activity is ×××, which will be not only meaningful but also interesting.</p><p>   活动的时间和地点：It will be held from 时间点 to 时间点 on 日期in our campus. 参加者及具体事项: sb. will take part in this activity, doing sth1, doing sth2 and doing sth3.</p><p>   你的任务：You will be invited to do sth. / You are supposed to do sth. / you will be required to do sth.</p><p>   【结尾段】</p><p>   If you need any further information, please feel free to send me an email to <a href="mailto:lihua@163.com" target="_blank" rel="noopener">lihua@163.com</a> or call me at 12345678.</p><p>   Please drop me a line to let me know your decision soon.</p><p>   I’m looking forward to your good news.</p><p>   【结尾语】</p><p>   如果你能来，我倍感荣幸：</p><p>   I will be very glad if you could come.</p><p>   I would feel honored if you could come.</p><p>   Looking forward to your early reply.</p><p>   An early reply is appreciated.</p><p>   假定你是李华，想邀请外教Henry一起参观中国剪纸（paper-cutting）艺术展。请给他写封邮件，内容包括：<br>   1．展览时间、地点；<br>   2．展览内容．<br>   注意：<br>   1．词数100左右；<br>   2．可以适当增加细节，以使行文连贯。</p><p>   Dear Henry，</p><p>   I’m very delighted to write a letter to tell you something about Chinese paper-cutting exhibition, which will start on June 20 in our school lecture hall and last for a week．（高分句型一）（展览时间、地点）</p><p>   As is well-known to us all，Chinese paper-cutting is famous all over the world and I’m sure you will be interested in it，so I plan to invite you to pay a close visit．（高分句型二）The exhibition is a collection of works created by some famous paper-cutting artists in China．（展览内容）During the activity，I will show you around our school and this is a good chance for you to enjoy yourself and learn more about Chinese traditional culture．</p><p>   Would you please have a look at the exhibition with me？I’d appreciate it if you could accept my invitation．（高分句型三） I’m looking forward to receiving your reply as soon as possible．（殷切希望）</p><p>   Yours，</p><p>   Li Hua</p><p>   Dear Henry,</p><p>   I have learned in your Facebook that you are greatly interested in the traditional culture. Recently, an exhibition of paper cutting is going to be held in our school, which will be not only meaningful but also interesting. So, I, on behalf of all my schoolmates, am writing to invite you to join us.</p><p>   Here are some relevant details about it. To begin with, the exhibition will be held in our library from June 9th to June 8th; As a result, you have adequate time to enjoy it. Besides, not only the art of paper cutting but also some other traditional crafts will be introduced, which will cultivate our interests, broaden our horizons and enrich our after school life.</p><p>   Hopefully, you could make it to this activities. I have the confidence that you will have a great time. Please drop me a line or send me an iMessage to let me know your decision soon. I’m looking forward to your reply and your presence.</p><p>   Yours，</p><p>   Li Hua</p><p>   假如你是Jenny。你所在城市的孔子学院（The Confucius Institute）将举办“汉语桥”比赛，该比赛面向学习汉语的外国青年学生。你的美国笔友David学习汉语多年，你想建议他参加这个比赛。<br>   请你根据下列提示给David写一封信介绍这个比赛并鼓励他参赛。</p><table><thead><tr><th></th><th>“汉语桥”比赛</th><th></th></tr></thead><tbody><tr><td>活动目的</td><td>1、提供展示汉语能力的舞台2、激发学习汉语的热情 3、增进对中华文化的了解</td></tr><tr><td>参赛对象</td><td>年龄30岁以下、母语非汉语的外国高校学生。</td></tr><tr><td>比赛内容</td><td>1、演讲（3分钟）2、当场问答（2分钟）3、中国文化技艺表演（3分钟）</td></tr><tr><td>参赛方式</td><td>参赛者须在2015年2月1日前向组委会提交个人信息资料。邮箱：<a href="mailto:chinesebridge@hanban.org" target="_blank" rel="noopener">chinesebridge@hanban.org</a>.</td></tr></tbody></table><p>   参考词汇：汉语桥：Chinese Bridge;<br>   组委会：organizing committee</p><p>   Dear David,</p><p>   I have learned in your Facebook that you have been studying Chinese for many years. Recently, a competition, Chinese Bridge, will be held for university students under 30, who are learning this beautiful language. Now I’m writing to invite you to participate in it.</p><p>   Here are some details about it. To begin with, the purposes are to give you a chance to show your Chinese ability, to give you more passion for further study, and to improve your understanding of our culture. Besides, during this competition, you will be required to give a speech for 3 minutes, answer the questions for 2 minutes and give a performance on our traditional culture for 3 minutes.</p><p>   What’s more, if you do want to take this challenge, you are supposed to send your personal information to the organizing committee, whose Email address is <a href="mailto:chinesebridge@hanban.org" target="_blank" rel="noopener">chinesebridge@hanban.org</a>, before Feb. 1st, 2015.</p><p>   I have the confidence that you will have a great time.</p><p>   Yours，</p><p>   Jenny</p><h2 id="二、申请信"><a href="#二、申请信" class="headerlink" title="二、申请信"></a>二、申请信</h2><ol><li><p>问候、自我介绍（姓名、性别、年龄、学历、兴趣爱好）、如何得知的这个机会、为啥申请、明确要求申请到这份工作。</p></li><li><p>我的优势：<br>英语好；人品好；学习好；经验丰富。</p></li><li><p>希望得到这份工作，我相信自己能干好，请回信！</p></li></ol><p>【常见申请的事情】</p><p>兼职工作 part-time job</p><p>志愿者 volunteer</p><p>奖学金 scholarship</p><p>留学机会/交换生 exchange student</p><p>参加各类活动的机会 opportunity</p><p>英语社团副主席 vice president of the English club</p><p>【主题句】</p><p>I have three advantages.</p><p>There are three main reasons why I am fit for the job.</p><p>There are three main reasons why I’m the best choice for you.</p><p>【拓展句】</p><p>英语好：<br>Having lived (in Detroit) ( for half a year) (as an exchange student), I’m undoubtedly good (at English). / Last year, I just won the second prize in the CCTV national English speech contest.</p><p>人品好：<br>(As the vice monitor) (of our class), I get along well with everyone, enjoy a harmonious interpersonal relationship and am always ready to help others.</p><p>学习好：<br>I am a top/straight-A student, always getting the highest score (in all my examinations).</p><p>经验多：<br>I once worked (for a similar company) / I once participated (in a similar activity) ; as a result, I have enough relevant experience.</p><p>【范文】</p><p>假如你是李华，你得知亚洲冬季运动会将在你所在的城市举办，需要一些志愿者，请写信给大赛组委会来申请这份工作。包含以下内容：</p><p>1.你的自我介绍（姓名，性别，年龄，学历，兴趣爱好）</p><p>2.你的优势（英语好，情商高，有相关经验）</p><p>3.期待得到肯定答复</p><p>Dear Sir or Madam,</p><p>How are you doing? I’m Li Hua, a 17-year-old boy currently studying in a high school, who is crazy about sports. Recently, I have learned in your official website that the Winter Asian Games will be held in our city and some volunteers will be badly needed. So I’m writing to apply for the position.</p><p>There are three main reasons why I’m fit for the job. First and foremost, having lived in Detroit for half a year as an exchange student, I’m undoubtedly good at English. Last year, I had just won the second prize in the CCTV national English speech contest. Additionally, as a vice monitor of our class, I get along well with everyone, enjoy harmonious interpersonal relationships, and am always ready to help others. Last but not least, I once participated in a similar activity; as a result, I have enough relevant experience.</p><p>Hopefully, the wonderful chance would be offered to me. I’m looking forward to your earliest reply.</p><p>Yours,</p><p>Li Hua</p><h2 id="三、求助信"><a href="#三、求助信" class="headerlink" title="三、求助信"></a>三、求助信</h2><p>【写信目的】</p><p>…So, I am writing to turn to you for help.</p><p>…So, I have no choice but to turn to you for help.</p><p>【中间段】</p><p>First and foremost, I have great difficulty in doing sth1. Additionally, I find it too challenging for me to do sth2. Last but not least, doing sth3 is also a big headache for me.</p><p>【结尾段】</p><p>Hopefully, your kind and timely help would be offered to me. I’m looking forward to your earliest reply.</p><p>假如你是李华正在英国一家学校学习暑期课程，你在学习过程中遇到很多问题，于是写信给教务处寻求帮助。</p><p>Dear Sir or Madam,</p><p>How are you doing? I’m Li Hua, a 17-year-old teenager currently studying in your school, who is crazy about English. Recently, I’m faced with some trouble with my study. So, I have no choice but to turn to you for help.</p><p>First and foremost, finishing my homework on time has always been a big headache for me, for I can’t help being too careful about every detail. Additionally, I also have difficulty in understanding the professor’s local accent, in that I once lived in America for three years as an exchange student. Last but not least, it has been troubling me for a long time that I have no idea how to read books faster.</p><p>Hopefully your kind and timely help would be offered to me. I’m looking forward to your earliest reply.<br>Best wishes!</p><p>Yours,</p><p>Li Hua</p><h2 id="四、建议信"><a href="#四、建议信" class="headerlink" title="四、建议信"></a>四、建议信</h2><p>【主题句】</p><p>Here are some suggestions for you.</p><p>Practical and effective measures must be taken immediately to improve the current situation.</p><p>【拓展句】</p><p>You should do sth.</p><p>You ought to do sth.</p><p>You’re supposed to do sth.</p><p>You had better do sth.</p><p>It will be beneficial for you to do sth.</p><p>It will be wise of you to do sth.</p><p>If I were you, I would do sth.</p><p>It is high time that sb. did sth.</p><p>Why not do sth.?</p><p>Why don’t you do sth.?</p><p>Do sth.!</p><p>【结尾段】</p><p>Hopefully my suggestions would be helpful for you.</p><p>I have the confidence that your problems will be solved soon.</p><p>I’m looking forward to your good news.</p><p>​假如你是李明，你们班转来一个新同学张华，一时无法融入班集体，感觉很苦恼。请你给他写信：<br>1.分析原因<br>2.给出建议<br>3.谈谈你本人将如何帮助他</p><p>Dear Zhang Hua,</p><p>How are you doing? I’m Li Ming, one of your new classmates. Recently, I learned in your micro-blog that you feel bored, sad, lonely and helpless in the class. So I’m writing to help you.</p><p>From my perspective / In my opinion, there are two reasons. For one thing, it is clear that you don’t like to communicate. For another, you don’t help others.</p><p>Here are some suggestions for you. First and foremost, there is no doubt that you are supposed to communicate with us. Additionally, if I were you I would help others. Last but not least, it’s high time that you often play with us after school.</p><p>As for me, I will try my best to help you. For example, I will often talk with you. Hopefully, your problems would be solved soon. I’m looking forward to your good news.<br>   Best wishes!</p><p>Yours,</p><p>Li Hua</p><p>假设你是李华，你得知你的外国朋友David想要学习中文，请你写信给他一些建议。<br>1、参加中文学习班2、多看中文书看电视3、学中文歌4、交中国朋友。</p><p>Dear David,</p><p>How are you doing? Recently, I have learned in your Facebook that you have a great desire to master Chinese. So, I’m writing to give you some sincere suggestions.</p><p>To begin with, some Chinese courses can help you to improve your grammar and vocabulary. Besides, some local books, magazines and CCTV programs are also beneficial for you, which are not only meaningful but also interesting. What’s more, some Chinese songs may help polish your pronunciation and learn more about our culture. Finally, if I were you, I would make some friends from China, in that practice makes perfect.</p><p>Hopefully, my suggestions would be helpful for you. I have the confidence that you will master this beautiful language soon. Please drop me a line to let me know what you will choose to do. I’m looking forward to your earliest reply.</p><h2 id="五、咨询信"><a href="#五、咨询信" class="headerlink" title="五、咨询信"></a>五、咨询信</h2><p>难点：学会表示“咨询”的相关句型结构。</p><p>Would you be so kind as to tell me （+宾语从句）？</p><p>I’d also like to know（+宾语从句）</p><p>I would appreciate it if you could let me know（+宾语从句）</p><p>中间段</p><p>First and foremost, would you be so kind as to tell me （+宾语从句）？Additionally, I’d also like to know（+宾语从句）. Last but not least, I would appreciate if you could let me know（+宾语从句）.<br>Hopefully, your kind and timely help would be offered to me. I am looking forward to your earliest reply.</p><p>咨询，本质上也是一种求助，因此咨询信的最后一段，和求助信的最后一段一样，都是希望得到对方及时的帮助。</p><p>假如你是北京26岁的专业健身教练李华，你在网上得知外国人Rose现招募晨练陪跑，并将为之付费。你有意应聘，想了解相关情况。</p><p>Dear rose,<br>How are you doing? I’m Li Hua, a 26-year-old man working as a professional body building trainer. Recently, I learned in your micro-blog that you want to find a running companion. So, I am writing to you to apply for it.</p><p>Here are some relevant questions for you. First and foremost, would you be so kind as to tell me when you want to start every morning? Additionally, I like to know how long you want to run. Last but not least, I would appreciate it if you can tell me how much you will pay.</p><p>Hopefully the wonderful chance would be offered to me. I have the confidence that we will have a great time. I’m looking forward to your earliest reply.</p><p>Best wishes.</p><p>Yours,</p><p>Li Hua</p><h2 id="六、告知信"><a href="#六、告知信" class="headerlink" title="六、告知信"></a>六、告知信</h2><p>最难，因为要造句。</p><p>Here are some details about it. To begin with, …    Besides, …    What’s more,…<br>Finally,…</p><p>【范文】</p><p>假定你是李华，正在教你的英国朋友Leslie学习汉语。请你写封邮件告知下次上课的计划。内容包括：<br>（1）时间和地点；<br>（2）内容：学习唐诗；<br>（3）课前准备：简要了解唐朝的历史。<br>注意：<br>1.词数100左右；</p><p>【步骤】<br>读题、圈要点、分段落；<br>翻译要点（要点—&gt;句子—&gt;升级）<br>连句成文（分段、过渡句）</p><p>万能动词</p><p>Enjoy + 好事</p><p>enjoy one’s birthday, enjoy the new year, enjoy the new computer, enjoy the cars;</p><p>Suffer from + 坏事</p><p>suffer from the heavy rain, suffer from the earthquake, suffer from the tsunami</p><p>Dear Leslie,</p><p>How are you doing? I’m so happy and honored to be a Chinese teacher. We are going to enjoy our next class. So I’m writing to give some relevant details about it.</p><p>To begin with, we will meet in the library at 2:00 pm this Sunday in that there will be fewer people. Besides the content of the class will be Tang poems, which will be not only meaningful but also interesting. What’s more, you are supposed to learn about the history of Tang Dynasty in advance, which will cultivate your interests, broaden your horizons and enrich your after-school life, so that you will fall in love with the culture at that time.</p><p>I have the confidence that we will have a great time together. See you!</p><p>Best wishes!</p><p>Yours,</p><p>Li Hua</p><h2 id="七、感谢信"><a href="#七、感谢信" class="headerlink" title="七、感谢信"></a>七、感谢信</h2><p>Whenever I read my diary, /whenever I look at your photos, /Whenever I recall those days, I just can’t help thinking of you. It was so kind of you to do sth1. Besides, you did sth.2, which really moved me. What’s more, you did sth.3. Nothing can erase/delete our wonderful memories and I will cherish them forever.</p><p>感谢信、道歉信：学套路套话</p><p>祝贺信、投诉信：学少量套话+写信原则</p><p>【范文】【背过就能得分】</p><p>假设你是李华，你刚从美国 David 家回国一周，你很想念他，并写信感谢他。</p><p>Dear David,</p><p>How is everything going? How time flies! It has been nearly a week since I arrived home. I miss you so much! So, I have no choice but to write to you.</p><p>Whenever I look at our photos, I just can’t help thinking of you. To begin with, it was so kind of you to sing an English song for me every day. Besides, you introduced some friends to me, which really moved me. What’s more, you taught me how to cook American food. Nothing would be able to erase our wonderful memories and I will cherish them forever.</p><p>Hopefully, we would get together again soon. I am looking forward to this day.</p><p>Best wishes.</p><p>Yours,</p><p>Li Hua</p><h2 id="八、道歉信"><a href="#八、道歉信" class="headerlink" title="八、道歉信"></a>八、道歉信</h2><p>{为了之前该做但是没有做的事儿道歉}（过去时间平台）</p><p>How I wish I had done sth1. However, I was chosen to do sth2, which, you know, was of great importance to me, in that (用一句话写清楚为什么第二件事重要). Consequently, I had no choice but to break my promise with you. I believe that if you were me, you would have made the same choice.</p><p>我多么希望我之前做了 sth1。然而，我被选中去做 sth2，这件事，你知道，是非常重要的/对于我，因为…………..。因此，我别无选择/只能跟你食言！我相信，如果你是我，你也会做同样选择的！</p><p>{为了将来该做但是做不成的事儿道歉}（将来时间平台）</p><p>How I wish I would do sth1! However, I am chosen to do sth2, which, you know, is of great importance to me, in that (用一句话写清楚为什么第二件事重要).. Consequently, I have no choice but to break my promise with you. I believe that if you were me, you would make the same choice.</p><p>【范文 1】</p><p>假设你是李华。昨天体育课上你意外扭伤了脚踝，将无法参加下周的英语短剧的演出。请你给外教 Miss Miller 写封电子邮件，内容主要包括：</p><p>1．陈述受伤原因及情况；</p><p>2．对无法参加演出表示歉意；</p><p>3．预祝演出获得成功。</p><p>Dear Miss Miller,</p><p>I am sorry to tell you that I hurt my left foot accidentally in the PE class yesterday; consequently, I can’t take part in the show of English short play next week. So, I am writing to express my heartfelt apology to you.</p><p>How I wish I would make it to the show! However, I was playing basketball when I was knocked by someone. As a result, my foot was hurt so badly that I couldn’t walk. Therefore, I have no choice but to break my promise with you. I believe that if you were me, you would make the same choice.</p><p>Hopefully, you would understand my situation and accept my apology. I have the confidence that our show will achieve success even without me. I am looking forward to the good news!</p><p>Yours,</p><p>Li Hua</p><h2 id="九、祝贺信"><a href="#九、祝贺信" class="headerlink" title="九、祝贺信"></a>九、祝贺信</h2><p>【开头段】（就对方取得的成就表示衷心的祝贺）</p><p>写信背景：</p><p>I’m delighted to learn of your success / achievements in….</p><p>写信目的：</p><p>I would like to congratulate you with all my heart.</p><p>【中间段】</p><p>You don’t know how excited I was at the news of your success. It is your diligence as well as your patience that has guaranteed your success. Besides, you must have work hard for a long time for your goal. Just as an old saying goes, where there is a will, there is a way. What’s more, your success will give you, as well as me, your best friend, so much courage and inspiration toward the future.</p><p>【结尾段】</p><p>再次表示祝贺和祝愿。</p><p>Congratulations again on your success.</p><p>Wish you good luck and success in the coming challenges.</p><p>【范文】(关于“中国象棋比赛获奖”)</p><p>Dear Peter,</p><p>I am writing to offer my sincere congratulations to you on your winning the first prize in the Chinese Chess Network Challenge. As your friend, I just want you to know how glad I am at your success.</p><p>“Everything comes to him who waits.” For these years, you’ve shown great interest in Chinese chess and kept on practicing it every day. Not only have you read many books about Chinese chess strategy, but also you have competed in all kinds of Chinese chess contests. Thanks to your efforts, you finally succeeded in winning the online competition! And I’m very happy that you become champion.</p><p>At last, I hope to play Chinese chess with you so that we can make progress together. Please tell me when you have time.</p><p>Congratulations again.</p><p>Yours,</p><p>Li Hua</p><h2 id="十、投诉信"><a href="#十、投诉信" class="headerlink" title="十、投诉信"></a>十、投诉信</h2><p>【开头段】写信背景</p><p>I’m a customer who bought …from your website several days ago.</p><p>写信目的：</p><p>I’m writing to complain about…(你要投诉的产品、服务等) .</p><p>I am writing to express my dissatisfaction with/ at….</p><p>【中间段】描述你所购买的产品的具体问题，并给出建议。</p><p>I am completely disappointed to find ….  我完全失望，发现…</p><p>For one thing,…   For another,…</p><p>To improve the situation, it is advisable for you to take the following measures.</p><p>I do hope that someone will take effective measures to deal with this matter.<br>First and foremost,…. In addition,….. Last but not least,….</p><p>3、结尾段：</p><p>I would be very delighted if you could consider my complaint seriously.</p><p>I do hope … will be improved as soon as possible. / I do hope you can give me a satisfactory reply as soon as possible.</p><p>Thank you for your consideration.</p><p>【范文】</p><p>Dear Customer Service,</p><p>Much to my regret, I’m writing this letter to express my dissatisfaction with the computer I<br>bought in your store.</p><p>The IBM Desktop computer I ordered from your store on Nov.11 finally arrived last Sunday, ten days later than expected. Besides, the computer can’t be properly shut down. When I click the shutdown button, it seems that the machine gives no response. And I’m so annoyed with it. Obviously, you didn’t carefully examine it before you sold it.</p><p>I have decided to make a complaint about your delivery service and the poor quality of the computer. I sincerely hope that you will replace this computer as soon as possible. If this is not possible, I will have no choice but to insist on a full refund (退款).</p><p>Yours,</p><p>Li Hua</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;书信类作文高分冲刺&quot;&gt;&lt;a href=&quot;#书信类作文高分冲刺&quot; class=&quot;headerlink&quot; title=&quot;书信类作文高分冲刺&quot;&gt;&lt;/a&gt;书信类作文高分冲刺&lt;/h1&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;一、写作标准&lt;/strong&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java多线程读写HashMap遇到的坑</title>
    <link href="http://kunxiang.wang/2019/03/29/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AF%BB%E5%86%99HashMap%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>http://kunxiang.wang/2019/03/29/Java多线程读写HashMap遇到的坑/</id>
    <published>2019-03-29T06:55:09.000Z</published>
    <updated>2019-03-29T06:55:09.897Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python中如何表示正负无穷大</title>
    <link href="http://kunxiang.wang/2019/03/15/Python%E4%B8%AD%E5%A6%82%E4%BD%95%E8%A1%A8%E7%A4%BA%E6%AD%A3%E8%B4%9F%E6%97%A0%E7%A9%B7%E5%A4%A7/"/>
    <id>http://kunxiang.wang/2019/03/15/Python中如何表示正负无穷大/</id>
    <published>2019-03-15T08:12:43.000Z</published>
    <updated>2019-03-15T08:17:59.432Z</updated>
    
    <content type="html"><![CDATA[<h4 id="cmath-inf"><a href="#cmath-inf" class="headerlink" title="cmath.inf"></a>cmath.inf</h4><p>Floating-point positive infinity. Equivalent to <code>float(&#39;inf&#39;)</code>.<br>负无穷-float(‘-inf’)</p><p>New in version 3.6.</p><a id="more"></a><h4 id="cmath-pi"><a href="#cmath-pi" class="headerlink" title="cmath.pi"></a>cmath.pi</h4><p>The mathematical constant π, as a float.</p><h4 id="cmath-e"><a href="#cmath-e" class="headerlink" title="cmath.e"></a>cmath.e</h4><p>The mathematical constant e, as a float.</p><h4 id="cmath-tau"><a href="#cmath-tau" class="headerlink" title="cmath.tau"></a>cmath.tau</h4><p>The mathematical constant τ, as a float.</p><p>New in version 3.6.</p><h4 id="cmath-infj"><a href="#cmath-infj" class="headerlink" title="cmath.infj"></a>cmath.infj</h4><p>Complex number with zero real part and positive infinity imaginary part. Equivalent to <code>complex(0.0, float(&#39;inf&#39;))</code>.</p><p>New in version 3.6.</p><h4 id="cmath-nan"><a href="#cmath-nan" class="headerlink" title="cmath.nan"></a>cmath.nan</h4><p>A floating-point “not a number” (NaN) value. Equivalent to <code>float(&#39;nan&#39;)</code>.</p><p>New in version 3.6.</p><h4 id="cmath-nanj"><a href="#cmath-nanj" class="headerlink" title="cmath.nanj"></a>cmath.nanj</h4><p>Complex number with zero real part and NaN imaginary part. Equivalent to complex(0.0, float(‘nan’)).</p><p>New in version 3.6.</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;cmath-inf&quot;&gt;&lt;a href=&quot;#cmath-inf&quot; class=&quot;headerlink&quot; title=&quot;cmath.inf&quot;&gt;&lt;/a&gt;cmath.inf&lt;/h4&gt;&lt;p&gt;Floating-point positive infinity. Equivalent to &lt;code&gt;float(&amp;#39;inf&amp;#39;)&lt;/code&gt;.&lt;br&gt;负无穷-float(‘-inf’)&lt;/p&gt;
&lt;p&gt;New in version 3.6.&lt;/p&gt;
    
    </summary>
    
      <category term="Python3 进阶" scheme="http://kunxiang.wang/categories/Python3-%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Python3" scheme="http://kunxiang.wang/tags/Python3/"/>
    
  </entry>
  
  <entry>
    <title>进程地址空间</title>
    <link href="http://kunxiang.wang/2019/02/21/%E8%BF%9B%E7%A8%8B%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4/"/>
    <id>http://kunxiang.wang/2019/02/21/进程地址空间/</id>
    <published>2019-02-21T13:32:36.000Z</published>
    <updated>2019-02-21T13:33:14.795Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/2952111-0eb79a7aa48b7b29.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="process address space.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/2952111-0eb79a7aa48b7b29.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot;
      
    
    </summary>
    
      <category term="操作系统" scheme="http://kunxiang.wang/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="多任务处理" scheme="http://kunxiang.wang/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%A4%9A%E4%BB%BB%E5%8A%A1%E5%A4%84%E7%90%86/"/>
    
    
      <category term="操作系统" scheme="http://kunxiang.wang/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>异常的分类</title>
    <link href="http://kunxiang.wang/2019/02/20/%E5%BC%82%E5%B8%B8%E7%9A%84%E5%88%86%E7%B1%BB/"/>
    <id>http://kunxiang.wang/2019/02/20/异常的分类/</id>
    <published>2019-02-20T07:24:54.000Z</published>
    <updated>2019-02-20T08:03:36.280Z</updated>
    
    <content type="html"><![CDATA[<p>异常可以分为四类：<code>中断(interrupt)、陷阱(trap)、故障(fault)、终止(abort)</code>.</p><table><thead><tr><th>类别</th><th>原因</th><th>异步/同步</th><th>返回行为</th></tr></thead><tbody><tr><td>中断</td><td>来自I/O设备的信号</td><td>异步</td><td>总是返回下一条指令</td></tr><tr><td>陷阱</td><td>有意的异常</td><td>同步</td><td>总是返回下一条指令</td></tr><tr><td>故障</td><td>潜在可恢复的错误</td><td>同步</td><td>可能返回到当前指令</td></tr><tr><td>终止</td><td>不可恢复的错误</td><td>同步</td><td>不会返回</td></tr></tbody></table><p>异步异常时由处理器外部的I/O设备中的事件产生的。同步异常是执行一条指令的直接产物。</p><a id="more"></a><h2 id="中断"><a href="#中断" class="headerlink" title="中断"></a>中断</h2><p>中断时异步发生的，来自处理器外部的I/O设备的信号结果。剩下的异常类型是同步发生的，是执行当前指令的结果，我们把这类指令叫做故障指令。</p><h2 id="陷阱"><a href="#陷阱" class="headerlink" title="陷阱"></a>陷阱</h2><p><code>陷阱</code>最重要的用途是用在用户程序和内核之间提供一个像过程一样的接口，叫做<code>系统调用</code><br>从程序员的角度看，系统调用和普通的函数调用是一样的。然而，它们的实现非常不同。普通函数运行在<code>用户模式</code>中，用户模式限制了函数可以执行的指令的类型，而且它们只能访问与调用函数相同的栈。系统调用在<code>内核模式</code>中，内核模式允许系统调用执行特权指令，并访问定义在内核中的栈。</p><h2 id="故障"><a href="#故障" class="headerlink" title="故障"></a>故障</h2><p>故障由错误引起，它可能能够被故障处理程序修正。根据故障是否能够被修复，故障处理程序要么重新执行引起故障的指令，要么终止。</p><p>一个经典的故障示例是<code>缺页异常</code>，当指令引用一个虚拟地址，而与该地址相对应的物理页面不在内存中，因此必须从磁盘中读取时，就会发生故障。一个页面就是虚拟内存中的一个连续的块（典型的是4KB），缺页处理程序从磁盘加载适当的页面，然后将控制返回给引起故障的指令。当指令再次执行是，相应的物理页面已经驻留在内存中了，指令就可以没有故障的运行完成了。</p><h2 id="终止"><a href="#终止" class="headerlink" title="终止"></a>终止</h2><p>终止是不可恢复的致命错误造成的结果，通常是一些硬件错误，比如DRAM或者SRAM位被损坏时发生的奇偶错误。终止处理程序从不将控制返回给应用程序，处理程序将控制返回给一个abort例程，该例程会终止这个应用程序。</p><hr><p>参考资料：《深入理解计算机系统》第三版P504</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;异常可以分为四类：&lt;code&gt;中断(interrupt)、陷阱(trap)、故障(fault)、终止(abort)&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类别&lt;/th&gt;
&lt;th&gt;原因&lt;/th&gt;
&lt;th&gt;异步/同步&lt;/th&gt;
&lt;th&gt;返回行为&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;中断&lt;/td&gt;
&lt;td&gt;来自I/O设备的信号&lt;/td&gt;
&lt;td&gt;异步&lt;/td&gt;
&lt;td&gt;总是返回下一条指令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;陷阱&lt;/td&gt;
&lt;td&gt;有意的异常&lt;/td&gt;
&lt;td&gt;同步&lt;/td&gt;
&lt;td&gt;总是返回下一条指令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;故障&lt;/td&gt;
&lt;td&gt;潜在可恢复的错误&lt;/td&gt;
&lt;td&gt;同步&lt;/td&gt;
&lt;td&gt;可能返回到当前指令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;终止&lt;/td&gt;
&lt;td&gt;不可恢复的错误&lt;/td&gt;
&lt;td&gt;同步&lt;/td&gt;
&lt;td&gt;不会返回&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;异步异常时由处理器外部的I/O设备中的事件产生的。同步异常是执行一条指令的直接产物。&lt;/p&gt;
    
    </summary>
    
      <category term="操作系统" scheme="http://kunxiang.wang/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="操作系统" scheme="http://kunxiang.wang/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>布尔环</title>
    <link href="http://kunxiang.wang/2019/02/15/%E5%B8%83%E5%B0%94%E7%8E%AF/"/>
    <id>http://kunxiang.wang/2019/02/15/布尔环/</id>
    <published>2019-02-15T02:07:21.000Z</published>
    <updated>2019-02-15T02:19:32.592Z</updated>
    
    <content type="html"><![CDATA[<p>布尔环与整数运算有很多相同属性。例如整数运算的一个属性是每个值x都有一个加法逆元(additive-inverse)<code>-x</code>, 使得<code>x+(-x)=0</code>。布尔环也有类似的属性，这里的加法运算时<code>^</code>,不过这时每个元素的加法逆元是它自己本身。也就是说，对于任何值a来说，<code>a^a=0</code>, 这里用0表示全0的位向量。</p><p>相同道理还有一个有意思的属性，即<code>(a^b)^a=b</code>，该属性可以用来交换两个元素的值，而不需要第三方变量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = a ^ b</span><br><span class="line">b = a ^ b</span><br><span class="line">a = a ^ b</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;布尔环与整数运算有很多相同属性。例如整数运算的一个属性是每个值x都有一个加法逆元(additive-inverse)&lt;code&gt;-x&lt;/code&gt;, 使得&lt;code&gt;x+(-x)=0&lt;/code&gt;。布尔环也有类似的属性，这里的加法运算时&lt;code&gt;^&lt;/code&gt;,不过这时
      
    
    </summary>
    
    
      <category term="计算机基础" scheme="http://kunxiang.wang/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>搭建Git服务器的一种方法</title>
    <link href="http://kunxiang.wang/2019/02/11/%E6%90%AD%E5%BB%BAGit%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>http://kunxiang.wang/2019/02/11/搭建Git服务器的一种方法/</id>
    <published>2019-02-11T05:43:13.000Z</published>
    <updated>2019-02-11T06:11:23.884Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-确保自己的服务器上安装有Git和ssh"><a href="#1-确保自己的服务器上安装有Git和ssh" class="headerlink" title="1. 确保自己的服务器上安装有Git和ssh"></a>1. 确保自己的服务器上安装有Git和ssh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install ssh</span><br><span class="line">yum install git</span><br></pre></td></tr></table></figure><h3 id="2-配置git用户"><a href="#2-配置git用户" class="headerlink" title="2. 配置git用户"></a>2. 配置git用户</h3><h4 id="新建git用户"><a href="#新建git用户" class="headerlink" title="新建git用户"></a>新建git用户</h4><p>主要是为了让大家在上传代码时登录使用，一般使用：git<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br></pre></td></tr></table></figure></p><a id="more"></a><h4 id="配置git用户的ssh登录"><a href="#配置git用户的ssh登录" class="headerlink" title="配置git用户的ssh登录"></a>配置git用户的ssh登录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/git    //进入git用户文件夹</span><br><span class="line">sudo mkdir .ssh    //创建 .ssh 文件夹</span><br><span class="line">sudo touch .ssh/authorized_keys    //创建authorized_keys文件，用以保存公钥</span><br></pre></td></tr></table></figure><p><code>authorized_keys</code> 是公钥保存文件，<code>客户端的私钥</code>与<code>服务器的公钥</code>配对成功，则可以登录。<code>之后将需要使用这个git服务器的成员的公钥复制粘贴到这个文件中（每个占一行）</code>。</p><p>客户端电脑进入 /users/用户名/.ssh 文件夹，如果已经有自己的秘钥，直接打开 <code>pub</code> 文件，复制里面的公钥信息，进入服务器，粘贴到 authorized_keys 文件中，如果没有，使用<code>ssh-keygen</code>命令生成后复制粘贴即可。</p><h3 id="3-初始化裸仓库来保存项目"><a href="#3-初始化裸仓库来保存项目" class="headerlink" title="3. 初始化裸仓库来保存项目"></a>3. 初始化裸仓库来保存项目</h3><p>在<code>/home/git</code>下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir repos    //创建repos文件夹，用于保存git仓库，名字随各人喜好，这里使用repos</span><br><span class="line"><span class="built_in">cd</span> repos    //进入repos文件夹</span><br><span class="line">sudo git init --bare sample.git    //创建一个裸仓库，名字按自己需要选择，这里使用sample</span><br></pre></td></tr></table></figure></p><p>repos文件夹中会创建 sample.git 文件夹。那么，剩下的事情，就是将本地代码上传到服务器的仓库中。</p><ol><li><p>如果本地没有初始代码，可以直接从服务器克隆仓库到本地：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@server:repos/sample.git</span><br></pre></td></tr></table></figure><p>git@server是登录服务器使用的用户名（git）和IP地址（server），登录之后有默认进入用户文件夹（/home/git），后面的路径就是用户文件夹下的仓库路径，也就是 repos/sample.git 。</p></li><li><p>如果本地有一些初始代码，需要直接同步到服务器的仓库，可以进入本地代码文件夹，创建并将代码保存到git仓库后同步至服务器仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init    //创建git仓库</span><br><span class="line">git add .    //添加所有文件</span><br><span class="line">git commit -m <span class="string">"your remark"</span>    //将代码提交到本地仓库</span><br><span class="line">git remote add origin git@server:repos/sample.git    //添加远程仓库地址</span><br><span class="line">git push --<span class="built_in">set</span>-upstream origin master    //将代码上传到远程仓库并把本地上传的代码设为master分支</span><br></pre></td></tr></table></figure></li></ol><p>有时会出现git远程仓库配置写错的情况，或者需要修改远程仓库，可以使用以下命令删除原有的远程仓库配置后重新配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-确保自己的服务器上安装有Git和ssh&quot;&gt;&lt;a href=&quot;#1-确保自己的服务器上安装有Git和ssh&quot; class=&quot;headerlink&quot; title=&quot;1. 确保自己的服务器上安装有Git和ssh&quot;&gt;&lt;/a&gt;1. 确保自己的服务器上安装有Git和ssh&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-配置git用户&quot;&gt;&lt;a href=&quot;#2-配置git用户&quot; class=&quot;headerlink&quot; title=&quot;2. 配置git用户&quot;&gt;&lt;/a&gt;2. 配置git用户&lt;/h3&gt;&lt;h4 id=&quot;新建git用户&quot;&gt;&lt;a href=&quot;#新建git用户&quot; class=&quot;headerlink&quot; title=&quot;新建git用户&quot;&gt;&lt;/a&gt;新建git用户&lt;/h4&gt;&lt;p&gt;主要是为了让大家在上传代码时登录使用，一般使用：git&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adduser git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://kunxiang.wang/categories/Git/"/>
    
    
      <category term="Git" scheme="http://kunxiang.wang/tags/Git/"/>
    
      <category term="Github" scheme="http://kunxiang.wang/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Python中如何生成一定格式的日期字符串</title>
    <link href="http://kunxiang.wang/2018/12/03/Python%E4%B8%AD%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E4%B8%80%E5%AE%9A%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%97%A5%E6%9C%9F%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://kunxiang.wang/2018/12/03/Python中如何生成一定格式的日期字符串/</id>
    <published>2018-12-03T08:20:56.000Z</published>
    <updated>2018-12-03T08:28:40.358Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">timeStamp = time.time()</span><br><span class="line">timeArray = time.localtime(time.time())</span><br><span class="line">print(timeArray)</span><br><span class="line"><span class="comment"># time.struct_time(tm_year=2018, tm_mon=12, tm_mday=3, tm_hour=16, tm_min=23, tm_sec=55, tm_wday=0, tm_yday=337, tm_isdst=0)</span></span><br><span class="line"></span><br><span class="line">formatTime = time.strftime(<span class="string">"%Y%m%d-%H:%M:%S"</span>, timeArray)</span><br><span class="line">print(formatTime)</span><br><span class="line"><span class="comment"># 20181203-16:23:55</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="Python3 进阶" scheme="http://kunxiang.wang/categories/Python3-%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Python3" scheme="http://kunxiang.wang/tags/Python3/"/>
    
  </entry>
  
  <entry>
    <title>Python中append和extend效率</title>
    <link href="http://kunxiang.wang/2018/11/27/Python%E4%B8%ADappend%E5%92%8Cextend%E6%95%88%E7%8E%87/"/>
    <id>http://kunxiang.wang/2018/11/27/Python中append和extend效率/</id>
    <published>2018-11-27T07:29:14.000Z</published>
    <updated>2018-11-27T07:58:02.098Z</updated>
    
    <content type="html"><![CDATA[<p>python提供了一个名为extend的方法，该方法将一个列表中的所有元素添加到另一个列表的结尾。在作用上，调用<code>data.extend(other)</code>的输出结果与以下代码的输出结果相同。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> elem <span class="keyword">in</span> other:</span><br><span class="line">    data.append(elem)</span><br></pre></td></tr></table></figure></p><p>在任何情况下，运行时间都正比于另一张列表的长度，并且之所以<code>摊销</code>，是因为第一张列表的底层数组需要调整打下以容纳增添的元素。</p><p>在实践中，相对于重复调用append方法，我们更倾向于选择extend方法。原因是渐进分析中隐含的常数明显更小。extend方法效率更高体现在三个方面：</p><ol><li>首先，使用合适的python方法总会有一些优势，因为这些方法通常使用本地编译语言执行</li><li>与调用很多独立的方法相比，调用一个函数完成所有工作的开销更小。</li><li><code>extend提升的效率来源更新列表的最终大小能提前计算出。</code>例如第二个数据集是非常大的，当重复调用append时，底层动态数组会有很多次调整大小的风险，如果调用一次extend方法，最多执行一次调整工作。</li></ol><a id="more"></a><p>我们所熟悉的构造新列表的语法，在几乎所有情况下，该行为的渐进效率在创建列表的长度方面是线性的。但是不同的方法在<br>实际效率上会有不同。</p><p>在python中经常使用一个诸如<code>squares = [k*k for k in range(1, n+1)]</code>的例子作为<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">squares = []</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">1</span>, n+<span class="number">1</span>)</span><br><span class="line">    squares.append(k*k)</span><br></pre></td></tr></table></figure></p><p>的一种速记，并由此引入了列表推导式。实验可以证明用列表推导式语法比不断增添数据来创建列表速度更快。</p><p>类似的，使用乘法操作初始化一个固定的列表，也是一种很常见的python风格，例如<code>[0]*100</code>生成一张长度为100的列表，这样做不但语法简单，而且比逐步构造这样的表效率更高</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python提供了一个名为extend的方法，该方法将一个列表中的所有元素添加到另一个列表的结尾。在作用上，调用&lt;code&gt;data.extend(other)&lt;/code&gt;的输出结果与以下代码的输出结果相同。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; elem &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; other:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data.append(elem)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在任何情况下，运行时间都正比于另一张列表的长度，并且之所以&lt;code&gt;摊销&lt;/code&gt;，是因为第一张列表的底层数组需要调整打下以容纳增添的元素。&lt;/p&gt;
&lt;p&gt;在实践中，相对于重复调用append方法，我们更倾向于选择extend方法。原因是渐进分析中隐含的常数明显更小。extend方法效率更高体现在三个方面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先，使用合适的python方法总会有一些优势，因为这些方法通常使用本地编译语言执行&lt;/li&gt;
&lt;li&gt;与调用很多独立的方法相比，调用一个函数完成所有工作的开销更小。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extend提升的效率来源更新列表的最终大小能提前计算出。&lt;/code&gt;例如第二个数据集是非常大的，当重复调用append时，底层动态数组会有很多次调整大小的风险，如果调用一次extend方法，最多执行一次调整工作。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Python3 进阶" scheme="http://kunxiang.wang/categories/Python3-%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Python3" scheme="http://kunxiang.wang/tags/Python3/"/>
    
  </entry>
  
  <entry>
    <title>IP地址的分类</title>
    <link href="http://kunxiang.wang/2018/11/07/IP%E5%9C%B0%E5%9D%80%E7%9A%84%E5%88%86%E7%B1%BB/"/>
    <id>http://kunxiang.wang/2018/11/07/IP地址的分类/</id>
    <published>2018-11-07T11:43:34.000Z</published>
    <updated>2018-11-07T12:10:20.810Z</updated>
    
    <content type="html"><![CDATA[<p>IP地址分类（A类 B类 C类 D类 E类）</p><p>IP地址由两部分组成，即<code>网络地址</code>和<code>主机地址</code>。网络地址表示其属于互联网的哪一个网络，主机地址表示其属于该网络中的哪一台主机。二者是主从关系。</p><p>IP地址的四大类型标识的是网络中的某台主机。IPv4的地址长度为32位，共4个字节，但实际中我们用点分十进制记法。</p><p>IP地址根据网络号和主机号来分，分为A、B、C三类及特殊地址D、E。    <code>全0和全1的都保留不用</code>。</p><ul><li><p>A类：（1.0.0.0-126.0.0.0）（默认子网掩码：255.0.0.0或 0xFF000000）</p><p>   第一个字节为网络号，后三个字节为主机号。<code>该类IP地址的最前面为“0”</code>，所以地址的网络号取值于1~126之间。</p><p>   一般用于大型网络。</p></li><li><p>B类：（128.1.0.0-191.255.0.0）（默认子网掩码：255.255.0.0或0xFFFF0000）</p><p>   前两个字节为网络号，后两个字节为主机号。<code>该类IP地址的最前面为“10”</code>，所以地址的网络号取值于128~191之间。</p><p>   一般用于中等规模网络。</p></li><li><p>C类：（192.0.1.0-223.255.255.0）（子网掩码：255.255.255.0或 0xFFFFFF00）</p><p>   前三个字节为网络号，最后一个字节为主机号。<code>该类IP地址的最前面为“110”</code>，所以地址的网络号取值于192~223之间。</p><p>   一般用于小型网络。</p></li><li><p>D类：是<code>多播地址</code>。<code>该类IP地址的最前面为“1110”</code>，所以地址的网络号取值于224~239之间。一般用于多路广播用户。</p></li><li><p>E类：是<code>保留地址</code>。<code>该类IP地址的最前面为“1111”</code>，所以地址的网络号取值于240~255之间。</p></li></ul><p>回送地址：127.0.0.1。 也是本机地址，等效于localhost或本机IP。 </p><p>一般用于测试使用。例如：ping 127.0.0.1来测试本机TCP/IP是否正常。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;IP地址分类（A类 B类 C类 D类 E类）&lt;/p&gt;
&lt;p&gt;IP地址由两部分组成，即&lt;code&gt;网络地址&lt;/code&gt;和&lt;code&gt;主机地址&lt;/code&gt;。网络地址表示其属于互联网的哪一个网络，主机地址表示其属于该网络中的哪一台主机。二者是主从关系。&lt;/p&gt;
&lt;p&gt;IP地址
      
    
    </summary>
    
      <category term="网络" scheme="http://kunxiang.wang/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="网络" scheme="http://kunxiang.wang/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Java内部类</title>
    <link href="http://kunxiang.wang/2018/11/05/Java%E5%86%85%E9%83%A8%E7%B1%BB/"/>
    <id>http://kunxiang.wang/2018/11/05/Java内部类/</id>
    <published>2018-11-05T04:59:24.000Z</published>
    <updated>2018-11-05T05:23:13.566Z</updated>
    
    <content type="html"><![CDATA[<p>类中的定义成员有三种，分别是</p><ol><li>字段</li><li>方法</li><li>内部类</li></ol><p>内部类：定义在类结构中的另一个类</p><p><code>为什么要使用内部类？</code></p><ol><li>增强封装，把内部类隐藏在外部类之内，不允许其他类访问该类</li><li>内部类能提高代码的可读性和可维护性，把小型类嵌入到外部类中结构上代码会更清晰。</li><li>内部类可以直接访问外部类的成员</li></ol><a id="more"></a><p>内部类根据使用不同的修饰符或者存在的位置不同，可以分为四种:</p><ol><li>实例内部类</li><li>静态内部类</li><li>局部内部类</li><li>匿名内部类（仅适合于一次使用的类）</li></ol><table><thead><tr><th></th><th>实例内部类</th><th>静态内部类</th><th>局部内部类</th></tr></thead><tbody><tr><td>主要特征</td><td>内部类的实例引用特定的外部类的实例</td><td>内部类的实例不与外部类的任何实例关联</td><td>可见范围是所在的方法</td></tr><tr><td>可用修饰符</td><td>访问控制修饰符，abstract，final</td><td>访问控制修饰符，static，abstract，final</td><td>abstract，final</td></tr><tr><td>可以访问外部类的哪些成员</td><td>可以直接访问外部类的所有成员</td><td>只能直接访问外部类的静态成员</td><td>可以直接访问外部类的所有成员，并且能访问所在方法的final类型的变量和参数</td></tr><tr><td>拥有成员类型</td><td>只能拥有实例成员</td><td>可以拥有静态成员和实例成员</td><td>只能拥有实例成员</td></tr><tr><td>外部类如何访问内部类的成员</td><td>必须通过内部类的实例来访问</td><td>对于静态成员，可以通过内部类的完整类名来访问</td><td>必须通过内部类的实例来访问</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;类中的定义成员有三种，分别是&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;字段&lt;/li&gt;
&lt;li&gt;方法&lt;/li&gt;
&lt;li&gt;内部类&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;内部类：定义在类结构中的另一个类&lt;/p&gt;
&lt;p&gt;&lt;code&gt;为什么要使用内部类？&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;增强封装，把内部类隐藏在外部类之内，不允许其他类访问该类&lt;/li&gt;
&lt;li&gt;内部类能提高代码的可读性和可维护性，把小型类嵌入到外部类中结构上代码会更清晰。&lt;/li&gt;
&lt;li&gt;内部类可以直接访问外部类的成员&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java中的接口和抽象类</title>
    <link href="http://kunxiang.wang/2018/11/04/Java%E4%B8%AD%E7%9A%84%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB/"/>
    <id>http://kunxiang.wang/2018/11/04/Java中的接口和抽象类/</id>
    <published>2018-11-04T14:20:35.000Z</published>
    <updated>2018-11-05T04:38:52.272Z</updated>
    
    <content type="html"><![CDATA[<p>相同点：</p><ul><li>都位于继承的顶端，用于被其他实现或继承</li><li>都不能实例化</li><li>都可以定义抽象方法，其子类/实现类都必须复写这些抽象方法。</li></ul><p>不同点：</p><ul><li>接口没有构造方法，抽象类有构造方法。这是因为子类继承抽象类后，在实例化一个子类时，需要检查父类的是否有构造方法。</li><li>抽象类可包含骗人通方法和抽象方法，<code>接口只能包含抽象方法（java8之前）</code></li><li>一个类只能继承一个直接父类（可能是抽象类），接口是多继承并且支持一个类实现多个接口（弥补了Java的单继承）</li><li>成员变量：接口里默认是public static final，抽象类默认包权限</li><li>方法：接口里默认public abstract,抽象类默认包访问权限</li><li>内部类：接口里默认public static，抽象类默认包访问权限</li></ul><p>如果接口和实现类可以完成与其他方法实现的其他功能，尽量使用接口，面向接口编程。</p><p>设计模式：接口和抽象类集合使用的（适配器模式）</p><p><code>面向接口编程：多态的好处：把实现类对象付给接口类型变量，屏蔽了不同实现类之间的差异，从而可以做到通用编程</code></p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wkx.jedis;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">IUSB</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">swapData</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mouse</span> <span class="keyword">implements</span> <span class="title">IUSB</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swapData</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"i am moving..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Printer</span> <span class="keyword">implements</span> <span class="title">IUSB</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swapData</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"i am printing, dididi..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MotherBoard</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> IUSB[] usbs = <span class="keyword">new</span> IUSB[<span class="number">6</span>];</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">pluginIn</span><span class="params">(IUSB usb)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (usbs.length == num) <span class="keyword">return</span>;</span><br><span class="line">        usbs[num] = usb;</span><br><span class="line">        num ++;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">doWork</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (IUSB usb : usbs)&#123;</span><br><span class="line">            <span class="keyword">if</span>(usb != <span class="keyword">null</span>) usb.swapData();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IUSBDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        MotherBoard.pluginIn(<span class="keyword">new</span> Mouse());</span><br><span class="line">        MotherBoard.pluginIn(<span class="keyword">new</span> Mouse());</span><br><span class="line">        MotherBoard.pluginIn(<span class="keyword">new</span> Mouse());</span><br><span class="line">        MotherBoard.pluginIn(<span class="keyword">new</span> Printer());</span><br><span class="line">        MotherBoard.pluginIn(<span class="keyword">new</span> Printer());</span><br><span class="line">        MotherBoard.pluginIn(<span class="keyword">new</span> Printer());</span><br><span class="line">        MotherBoard.pluginIn(<span class="keyword">new</span> Printer());</span><br><span class="line">        MotherBoard.doWork();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;相同点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;都位于继承的顶端，用于被其他实现或继承&lt;/li&gt;
&lt;li&gt;都不能实例化&lt;/li&gt;
&lt;li&gt;都可以定义抽象方法，其子类/实现类都必须复写这些抽象方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不同点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接口没有构造方法，抽象类有构造方法。这是因为子类继承抽象类后，在实例化一个子类时，需要检查父类的是否有构造方法。&lt;/li&gt;
&lt;li&gt;抽象类可包含骗人通方法和抽象方法，&lt;code&gt;接口只能包含抽象方法（java8之前）&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;一个类只能继承一个直接父类（可能是抽象类），接口是多继承并且支持一个类实现多个接口（弥补了Java的单继承）&lt;/li&gt;
&lt;li&gt;成员变量：接口里默认是public static final，抽象类默认包权限&lt;/li&gt;
&lt;li&gt;方法：接口里默认public abstract,抽象类默认包访问权限&lt;/li&gt;
&lt;li&gt;内部类：接口里默认public static，抽象类默认包访问权限&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果接口和实现类可以完成与其他方法实现的其他功能，尽量使用接口，面向接口编程。&lt;/p&gt;
&lt;p&gt;设计模式：接口和抽象类集合使用的（适配器模式）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;面向接口编程：多态的好处：把实现类对象付给接口类型变量，屏蔽了不同实现类之间的差异，从而可以做到通用编程&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="面试" scheme="http://kunxiang.wang/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Redis之数据类型的内部编码</title>
    <link href="http://kunxiang.wang/2018/11/01/Redis%E4%B9%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%86%85%E9%83%A8%E7%BC%96%E7%A0%81/"/>
    <id>http://kunxiang.wang/2018/11/01/Redis之数据类型的内部编码/</id>
    <published>2018-11-01T03:25:48.000Z</published>
    <updated>2018-11-01T09:00:53.873Z</updated>
    
    <content type="html"><![CDATA[<h4 id="哈希"><a href="#哈希" class="headerlink" title="哈希"></a>哈希</h4><p>哈希类型内部编码有两种形式：</p><ol><li><p><code>ziplist</code>(压缩列表，感觉与python中的zip方法类似，有待验证。。。)：当哈希类型元素个数小于<code>hash-max-ziplist-entries</code>配置(默认512)、同时所有值都小于<code>hash-max-ziplist-value</code>配置(默认64字节)，Redis会使用ziplist作为哈希的内部实现。ziplist使用更加紧凑结构实现多个元素的连续存储，所以在节省内存方面比hashtable更有优势。</p></li><li><p><code>hashtable</code>(哈希表)：当哈希类型无法满足ziplist条件时，Redis会使用hashtable作为哈希的内部实现，因此此时ziplist读写效率会下降，hashtable读写的时间复杂度为O(1).</p></li></ol><a id="more"></a><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>从Redis3.2之后开始提供了<code>quicklist内部编码，它是一种将ziplist和linkedlist结合的一种编码方式</code>。</p><ol><li><code>ziplist</code>(压缩列表):当列表的元素个数小于<code>list-max-ziplist-entries</code>配置(默认512个),同时列表中每个元素值都小于<code>list-max-ziplist-value</code>配置(默认64字节),Redis会选用ziplist来作为列表内部的实现来减小内存使用。</li><li><code>linkedlist</code>(链表):当列表类型无法满足ziplist的条件时，Redis会使用linkedlist作为列表的内部实现。</li></ol><p>Redis3.2之后提供了quicklist内部编码，简单的说它是一个ziplist为节点的linkedlist，它结合了两者的优势，为列表类型提供了一种更为优秀的内部编码实现。</p><h4 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h4><p>集合类型的内部编码也有两种：</p><ol><li><code>intset</code>(整数集合)：当集合中的元素都是<code>整数</code>且<code>元素个数小于set-max-intset-entries配置(默认512个)</code>，Redis会选用intset来作为集合的内部实现，从而减小内存的使用。</li><li><code>hashtable</code>(哈希表)：当集合类型无法满足intset的条件时，Redis会使用hashtable作为集合的内部实现。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;哈希&quot;&gt;&lt;a href=&quot;#哈希&quot; class=&quot;headerlink&quot; title=&quot;哈希&quot;&gt;&lt;/a&gt;哈希&lt;/h4&gt;&lt;p&gt;哈希类型内部编码有两种形式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;(压缩列表，感觉与python中的zip方法类似，有待验证。。。)：当哈希类型元素个数小于&lt;code&gt;hash-max-ziplist-entries&lt;/code&gt;配置(默认512)、同时所有值都小于&lt;code&gt;hash-max-ziplist-value&lt;/code&gt;配置(默认64字节)，Redis会使用ziplist作为哈希的内部实现。ziplist使用更加紧凑结构实现多个元素的连续存储，所以在节省内存方面比hashtable更有优势。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;hashtable&lt;/code&gt;(哈希表)：当哈希类型无法满足ziplist条件时，Redis会使用hashtable作为哈希的内部实现，因此此时ziplist读写效率会下降，hashtable读写的时间复杂度为O(1).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Redis" scheme="http://kunxiang.wang/categories/Redis/"/>
    
      <category term="数据类型" scheme="http://kunxiang.wang/categories/Redis/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
    
      <category term="Redis" scheme="http://kunxiang.wang/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Java包装类中的缓存设计</title>
    <link href="http://kunxiang.wang/2018/10/30/Java%E5%8C%85%E8%A3%85%E7%B1%BB%E4%B8%AD%E7%9A%84%E7%BC%93%E5%AD%98%E8%AE%BE%E8%AE%A1/"/>
    <id>http://kunxiang.wang/2018/10/30/Java包装类中的缓存设计/</id>
    <published>2018-10-30T07:13:26.000Z</published>
    <updated>2018-10-30T07:50:02.617Z</updated>
    
    <content type="html"><![CDATA[<p>包装类中的<code>缓存设计</code>(<a href="https://baike.baidu.com/item/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/10541959?fr=aladdin" target="_blank" rel="noopener">享元模式-FlyWeight</a>)，本质就是缓存设计。</p><p><code>Byte/Short/Integer/Long</code>:缓存[-128, 127]区间的数据；<br><code>Character</code>:缓存[0,127]区间的数据.<br><a id="more"></a><br>首先来看一个有意思的面试题</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//case 1</span></span><br><span class="line">        Integer i1 = <span class="keyword">new</span> Integer(<span class="number">123</span>);</span><br><span class="line">        Integer i2 = <span class="keyword">new</span> Integer(<span class="number">123</span>);</span><br><span class="line">        System.out.println(i1 == i2); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//case 2</span></span><br><span class="line">        Integer i3 = Integer.valueOf(<span class="number">123</span>);</span><br><span class="line">        Integer i4 = Integer.valueOf(<span class="number">123</span>);</span><br><span class="line">        System.out.println(i3 == i4); <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//case 3</span></span><br><span class="line">        Integer i5 = <span class="number">123</span>; <span class="comment">//自动装箱操作，底层编译后代码为Integer.valueOf(123);    和case2相同</span></span><br><span class="line">        Integer i6 = <span class="number">123</span>;</span><br><span class="line">        System.out.println(i5 == i6); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//case 4</span></span><br><span class="line">        Integer ii1 = <span class="keyword">new</span> Integer(<span class="number">250</span>);</span><br><span class="line">        Integer ii2 = <span class="keyword">new</span> Integer(<span class="number">250</span>);</span><br><span class="line">        System.out.println(ii1 == ii2); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//case 5</span></span><br><span class="line">        Integer ii3 = Integer.valueOf(<span class="number">250</span>); <span class="comment">// 250不在缓存区间内，就得new新对象</span></span><br><span class="line">        Integer ii4 = Integer.valueOf(<span class="number">250</span>);</span><br><span class="line">        System.out.println(ii3 == ii4); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// case 6</span></span><br><span class="line">        Integer ii5 = <span class="number">250</span>;</span><br><span class="line">        Integer ii6 = <span class="number">250</span>;</span><br><span class="line">        System.out.println(ii5 == ii6); <span class="comment">// false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看一下integer源码,如下所示。可以看到Integer的缓存空间在[-128, 127]之间。<br>当传入的数值在此区间内时，之间调用缓存内的数据。反之，重新<code>return new Integer(i);</code>在堆空间返回一个新整形对象。</p><p>那么我们应该如何比较两个对象的值得大小呢？<br>正确的方法是使用<code>equals</code>来比较，equals方法来自于Object根对象，按照官方的建议，在构造子类对象时需要复写父类中的equals方法，来比较我们关心的数据，而不是内存地址（<code>==</code>比较的是内存地址）。现将Integer中的equals拿出来检查一下复写情况</p><p><code>((Integer)obj).intValue()</code>拆箱操作，<code>value == ((Integer)obj).intValue();</code>使用基本的数据类型进行比较。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Integer) &#123;</span><br><span class="line">        <span class="keyword">return</span> value == ((Integer)obj).intValue(); <span class="comment">// 拆箱操作，比较基本数据类型</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">valueOf</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)</span><br><span class="line">            <span class="keyword">return</span> IntegerCache.cache[i + (-IntegerCache.low)];</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Integer(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">IntegerCache</span> </span>&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> low = -<span class="number">128</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> high;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> Integer cache[];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">static</span> &#123; <span class="comment">// 初始化操作</span></span><br><span class="line">            <span class="comment">// high value may be configured by property</span></span><br><span class="line">            <span class="keyword">int</span> h = <span class="number">127</span>;</span><br><span class="line">            String integerCacheHighPropValue =</span><br><span class="line">                sun.misc.VM.getSavedProperty(<span class="string">"java.lang.Integer.IntegerCache.high"</span>);</span><br><span class="line">            <span class="keyword">if</span> (integerCacheHighPropValue != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">int</span> i = parseInt(integerCacheHighPropValue);</span><br><span class="line">                    i = Math.max(i, <span class="number">127</span>);</span><br><span class="line">                    <span class="comment">// Maximum array size is Integer.MAX_VALUE</span></span><br><span class="line">                    h = Math.min(i, Integer.MAX_VALUE - (-low) -<span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span>( NumberFormatException nfe) &#123;</span><br><span class="line">                    <span class="comment">// If the property cannot be parsed into an int, ignore it.</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            high = h;</span><br><span class="line"></span><br><span class="line">            cache = <span class="keyword">new</span> Integer[(high - low) + <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> j = low;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; cache.length; k++)</span><br><span class="line">                cache[k] = <span class="keyword">new</span> Integer(j++);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// range [-128, 127] must be interned (JLS7 5.1.7)</span></span><br><span class="line">            <span class="keyword">assert</span> IntegerCache.high &gt;= <span class="number">127</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">IntegerCache</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;包装类中的&lt;code&gt;缓存设计&lt;/code&gt;(&lt;a href=&quot;https://baike.baidu.com/item/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/10541959?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;享元模式-FlyWeight&lt;/a&gt;)，本质就是缓存设计。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Byte/Short/Integer/Long&lt;/code&gt;:缓存[-128, 127]区间的数据；&lt;br&gt;&lt;code&gt;Character&lt;/code&gt;:缓存[0,127]区间的数据.&lt;br&gt;
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java中的单例模式</title>
    <link href="http://kunxiang.wang/2018/10/30/Java%E4%B8%AD%E7%9A%84%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://kunxiang.wang/2018/10/30/Java中的单例模式/</id>
    <published>2018-10-30T04:00:22.000Z</published>
    <updated>2018-10-30T04:04:25.179Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-饿汉模式"><a href="#1-饿汉模式" class="headerlink" title="1. 饿汉模式"></a>1. 饿汉模式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayUtil.getInstance().sort(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArrayUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1. 在该类中，实例化一个实例</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ArrayUtil instance = <span class="keyword">new</span> ArrayUtil();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 私有化自身的构造器，防止外界通过构造器new对象</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ArrayUtil</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3. 对外开放一个静态公共方法，用于获取对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ArrayUtil <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//此处编写排序代码</span></span><br><span class="line">        System.out.println(<span class="string">"I'm sorting "</span> + array);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-饿汉模式&quot;&gt;&lt;a href=&quot;#1-饿汉模式&quot; class=&quot;headerlink&quot; title=&quot;1. 饿汉模式&quot;&gt;&lt;/a&gt;1. 饿汉模式&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java中的代码块</title>
    <link href="http://kunxiang.wang/2018/10/30/Java%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%A0%81%E5%9D%97/"/>
    <id>http://kunxiang.wang/2018/10/30/Java中的代码块/</id>
    <published>2018-10-30T01:24:49.000Z</published>
    <updated>2018-10-30T02:43:22.581Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>什么是代码块：在类或者方法中，直接使用<code>{}</code>括起来的一段代码，表示一块带啊区域。</p></blockquote><p>代码在块中属于局部变量，只在自己所在的花括号区域内有效。<br>根据代码块所定义的位置不同，代码块分为三种形式</p><ol><li><p><code>局部代码块</code>：直接定义在<code>方法内部</code>的代码块。<br>一般的，不会直接使用局部代码块，只不过会结合if、while等关键字，表示一块代码区域。</p></li><li><p><code>初始化代码块(构造代码块)</code>：直接定义在<code>类</code>中。<br>每次创建对象的时候都会执行初始化代码块：每次创建对象的时候都会调用构造器，在调用构造器之前，会先执行本类中的初始化代码块。<code>PS</code>:<code>通过反编译，可以看到，初始化代码也作为构造器最初的语句。</code>一般不使用这种用法，因为不够优雅美观。即使要初始化操作，一般在构造器中进行初始化即可。或者专门定义一个方法做初始化操作，方法哦构造器中进行调用。</p></li><li><p><code>静态代码块：使用static修饰的初始化代码块。</code><br>静态代码块在主方法执行之前进行调用，而且只会执行一次。main方法是程序的入口，静态代码块由于main方法执行。静态成员随着字节码的加载也加载进JVM,此时main还没执行，因为方法需要JVM调用，先把字节码加载进JVM，然后JVM再调用main方法。<code>一般的，我们使用静态代码块来做初始化操作，加载资源，加载配置文件等。</code></p></li></ol><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CodeBlockDemo</span></span>&#123;</span><br><span class="line">  &#123;</span><br><span class="line">    System.out.println(<span class="string">"初始化代码块"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  CodeBlockDemo()&#123;</span><br><span class="line">    System.out.println(<span class="string">"构造器。。。"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"静态代码块"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"进入main方法"</span>);</span><br><span class="line">    <span class="comment">//创建三个匿名对象</span></span><br><span class="line">    <span class="keyword">new</span> CodeBlockDemo();</span><br><span class="line">    <span class="keyword">new</span> CodeBlockDemo();</span><br><span class="line">    <span class="keyword">new</span> CodeBlockDemo();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*执行结果如下</span></span><br><span class="line"><span class="comment">静态代码块</span></span><br><span class="line"><span class="comment">进入main方法</span></span><br><span class="line"><span class="comment">初始化代码块</span></span><br><span class="line"><span class="comment">构造器。。。</span></span><br><span class="line"><span class="comment">初始化代码块</span></span><br><span class="line"><span class="comment">构造器。。。</span></span><br><span class="line"><span class="comment">初始化代码块</span></span><br><span class="line"><span class="comment">构造器。。。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>一道Java面试题<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> App d = <span class="keyword">new</span> App();</span><br><span class="line">    <span class="keyword">private</span> SuperClass t = <span class="keyword">new</span> SubClass(); <span class="comment">//先确定依赖，由此开始作为入口</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    App()&#123;</span><br><span class="line">        System.out.println(<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SuperClass</span></span>&#123;</span><br><span class="line">    SuperClass()&#123;</span><br><span class="line">        System.out.println(<span class="string">"构造SuperClass"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubClass</span> <span class="keyword">extends</span> <span class="title">SuperClass</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SubClass()&#123;</span><br><span class="line">        <span class="comment">//super();</span></span><br><span class="line">        System.out.println(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//执行结果</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">构造SuperClass</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">Hello</span><br></pre></td></tr></table></figure></p><p><code>分析：</code></p><ol><li>首先在执行子类subclass构造器的时候先执行隐藏的<code>super();</code>来执行父类的构造器，也就是构造<code>SuperClass</code>在<code>2</code>之前打印.</li><li><p>为什么不先打印4而是先打印子类的1？原因是class App依赖于依赖于subclass，会优先编译subclass，也就是说会优先编译被依赖的优先存在的类。所以首先把subclass加载到虚拟机，因此首先打印1.<code>编译的时候首先确定依赖!!!</code></p></li><li><p>非static字段的初始化都在构造器中执行，也就是说App类反编译后如下。可以看出，打印<code>1</code>后,在APP构造器中实例化subclass，此时，先打印父类构造器中的<code>构造SuperClass</code>,然后打印子类的<code>2</code>。紧接着继续执行APP构造器的代码块，打印app构造器中的<code>3</code>。</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> App d = <span class="keyword">new</span> App();</span><br><span class="line">    <span class="keyword">private</span> SuperClass t = <span class="keyword">null</span>; <span class="comment">//先确定依赖，由此开始作为入口</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    App()&#123;</span><br><span class="line">        t = <span class="keyword">new</span> SubClass(); <span class="comment">//非static字段的初始化都在构造器中执行</span></span><br><span class="line">        System.out.println(<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>以上依赖关系确认完毕，然后开始将App加载进虚拟机，执行由于静态代码块优先于main，静态代码块执行，打印4，最后执行main方法，打印hello.</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;什么是代码块：在类或者方法中，直接使用&lt;code&gt;{}&lt;/code&gt;括起来的一段代码，表示一块带啊区域。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;代码在块中属于局部变量，只在自己所在的花括号区域内有效。&lt;br&gt;根据代码块所定义的位置不同，代码块分为三种形式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;局部代码块&lt;/code&gt;：直接定义在&lt;code&gt;方法内部&lt;/code&gt;的代码块。&lt;br&gt;一般的，不会直接使用局部代码块，只不过会结合if、while等关键字，表示一块代码区域。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;初始化代码块(构造代码块)&lt;/code&gt;：直接定义在&lt;code&gt;类&lt;/code&gt;中。&lt;br&gt;每次创建对象的时候都会执行初始化代码块：每次创建对象的时候都会调用构造器，在调用构造器之前，会先执行本类中的初始化代码块。&lt;code&gt;PS&lt;/code&gt;:&lt;code&gt;通过反编译，可以看到，初始化代码也作为构造器最初的语句。&lt;/code&gt;一般不使用这种用法，因为不够优雅美观。即使要初始化操作，一般在构造器中进行初始化即可。或者专门定义一个方法做初始化操作，方法哦构造器中进行调用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;静态代码块：使用static修饰的初始化代码块。&lt;/code&gt;&lt;br&gt;静态代码块在主方法执行之前进行调用，而且只会执行一次。main方法是程序的入口，静态代码块由于main方法执行。静态成员随着字节码的加载也加载进JVM,此时main还没执行，因为方法需要JVM调用，先把字节码加载进JVM，然后JVM再调用main方法。&lt;code&gt;一般的，我们使用静态代码块来做初始化操作，加载资源，加载配置文件等。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java编译类型和运行类型</title>
    <link href="http://kunxiang.wang/2018/10/29/Java%E7%BC%96%E8%AF%91%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E8%A1%8C%E7%B1%BB%E5%9E%8B/"/>
    <id>http://kunxiang.wang/2018/10/29/Java编译类型和运行类型/</id>
    <published>2018-10-29T14:00:41.000Z</published>
    <updated>2018-10-29T14:18:16.575Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line">Animal a = <span class="keyword">new</span> Dog();</span><br><span class="line">a.eat()<span class="comment">//编译报错</span></span><br><span class="line">((Dog) a).run()<span class="comment">//编译通过</span></span><br></pre></td></tr></table></figure><p>如上的简易代码，编译时会报错。<br>编译类型：Animal a<br>运行类型：new Dog()</p><p>编译时，编译类型会根据a.eat()查找eat方法，找不到就会报错。<br>使用强制类型转换可以解决该问题，即<br>((Dog) a).run()</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java之Object根类</title>
    <link href="http://kunxiang.wang/2018/10/29/Java%E4%B9%8BObject%E6%A0%B9%E7%B1%BB/"/>
    <id>http://kunxiang.wang/2018/10/29/Java之Object根类/</id>
    <published>2018-10-29T03:48:41.000Z</published>
    <updated>2018-10-29T05:11:33.301Z</updated>
    
    <content type="html"><![CDATA[<p>Object本身就是指对象的意思。开发时发现对象具有一些共通的行为，因此抽象出一个类：Object，来表示对象类，其他都会继承于Object类，也就是Object中的方法。</p><p><code>引用数据类型：类/接口/数组</code>，<code>引用类型又称为对象类</code>，<code>所谓的数组变量名称应该指代数组对象</code>。<br>Object类常用方法：</p><ol><li><p><code>protected void finalize()</code>:当垃圾回收器确定不存在对该对象的更多引用时，由对象回收期调用此方法。垃圾回收器在回收某一个对象之前会调用该方法，做扫尾操作。</p></li><li><p><code>Class getClass</code>:返回当前对象的真实类型。</p></li><li><p><code>int hashCode()</code>:返回该对象的哈希值，hashCode决定了对象在哈希表中的存储位置，不同对象的hashCode是不一样的。</p></li><li><p><code>boolean equals(Object obj)</code>: 拿当前对象(this)和参数obj比较。在Object类中的equals方法，本身和’==’符号相同，都是比较的内存地址。官方建议：每个类都应该赋写equals方法，不要比较内存地址，而是比较我们关心的数据。</p></li><li><p><code>String toString()</code>:表示把一个对象转换为字符串表示。在调用打印时，其实打印的就是对象的toString方法。<code>System.out.println(obj);</code>等价于<code>System.out.println(obj.toString);</code>(决堤可以查看Java源代码)。默认情况下打印对象，打印的是对象的十六进制hashCode,但我们更关心对象中的真实存储数据。官方建议：每个类最好赋写toString方法，返回我们关心的数据。</p></li></ol><p><img src="https://upload-images.jianshu.io/upload_images/2952111-d5a996ebf97c420b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screen Shot 2018-10-29 at 12.08.42.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Object本身就是指对象的意思。开发时发现对象具有一些共通的行为，因此抽象出一个类：Object，来表示对象类，其他都会继承于Object类，也就是Object中的方法。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;引用数据类型：类/接口/数组&lt;/code&gt;，&lt;code&gt;引用类型又称为对象
      
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java之super和this</title>
    <link href="http://kunxiang.wang/2018/10/29/Java%E4%B9%8Bsuper%E5%92%8Cthis/"/>
    <id>http://kunxiang.wang/2018/10/29/Java之super和this/</id>
    <published>2018-10-29T01:31:49.000Z</published>
    <updated>2018-10-29T03:06:58.118Z</updated>
    
    <content type="html"><![CDATA[<p>this: 当前的对象，哪一个对象调用this，this就代指哪一个对象。使用在某一个对象中。<br>super: 当前对象的父类方法或构造器。使用在继承关系中。</p><h4 id="super"><a href="#super" class="headerlink" title="super"></a>super</h4><ol><li><p><code>当new一个子类对象的时候，会先创建一个父类对象</code>。可以认为，在调用子类构造器之前，在子类构造器中会先调用父类的构造器，默认调用的是父类无参数的构造器。调用父类构造器后悔创建一个父类的对象。</p></li><li><p>如果父类不存在可以被子类访问的构造器，则不能存在子类，即子类不会被创建成功。</p></li><li><p>如果父类没有提供无参数的构造器，则此时子类必须显式的通过<code>super</code>语句去掉用父类带参数的构造器。</p></li><li><p>子类构建的所有的行为建立在第一条规则基础之上。</p></li></ol><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>    age;</span><br><span class="line">    Animal(String name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        System.out.println(<span class="string">"animal constructor"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Animal(String color)&#123;</span><br><span class="line">        System.out.println(<span class="string">"this is a "</span> + color +<span class="string">" color"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Animals Say sth..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fish</span> <span class="keyword">extends</span> <span class="title">Animal</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String color;</span><br><span class="line">    Fish()&#123;</span><br><span class="line">       <span class="comment">//构造器中的第一句必须为super，如果不写，则默认调用super()</span></span><br><span class="line">       <span class="keyword">super</span>(<span class="string">"RED"</span>); <span class="comment">//子类没有提供无参数的构造器，必须显示super滴啊用，否则会编译失败</span></span><br><span class="line">       System.out.println(<span class="string">"Fish Constructor"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个简单的示意图如下：<br><img src="https://upload-images.jianshu.io/upload_images/2952111-2db47a7c0f8a1ec1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screen Shot 2018-10-28 at 22.12.48.png"></p><h4 id="this"><a href="#this" class="headerlink" title="this"></a>this</h4><h5 id="存在于位置"><a href="#存在于位置" class="headerlink" title="存在于位置"></a>存在于位置</h5><ol><li>在构造器中，表示当前创建的对象</li><li>在方法中，哪一个对象调用this所在的方法，那么此时this就表示哪一个对象。</li></ol><p><img src="https://upload-images.jianshu.io/upload_images/2952111-bf1b724c2da63d77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screen Shot 2018-10-28 at 16.28.10.png"></p><h5 id="this的使用"><a href="#this的使用" class="headerlink" title="this的使用"></a>this的使用</h5><ol><li>解决成员变量的参数（局部变量）之间的二义性，必须使用this区分</li><li>同类中实例方法互相调用时可以省略this关键字，但是不建议省略</li><li>将this作为参数传递给另外一个方法</li><li>将this作为方法的返回值（链式方法编程）</li><li>构造器函数的互相调用，this([参数])必须写在构造器内的第一行，与super类似。</li><li>this、super不能static一起使用。原因是当字节码被加载进jvm时，static成员已经存在了，但是此时对象还没有被创建，没有对象，也就没有this。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">User(String name)&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line">User(String name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">  <span class="keyword">this</span>(name); <span class="comment">//表示在调用参数为string类型的构造器</span></span><br><span class="line">  <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//上述调用方式为多参数构造器调用少参数构造器，一般工程经验为少参数构造器调用多参数构造器</span></span><br><span class="line"><span class="comment">//对于多余的参数，使用默认值赋值即可，如下</span></span><br><span class="line">User(String name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name;</span><br><span class="line">  <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">User(String name)&#123;</span><br><span class="line">  <span class="keyword">this</span>(name, <span class="number">0</span>);<span class="comment">//此处对int age赋值为0即可</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/2952111-955c8e05df6fd8ef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screen Shot 2018-10-28 at 16.41.16.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2952111-1d10520f4fc5a369.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screen Shot 2018-10-28 at 16.58.54.png"></p><p>是</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;this: 当前的对象，哪一个对象调用this，this就代指哪一个对象。使用在某一个对象中。&lt;br&gt;super: 当前对象的父类方法或构造器。使用在继承关系中。&lt;/p&gt;
&lt;h4 id=&quot;super&quot;&gt;&lt;a href=&quot;#super&quot; class=&quot;headerlink&quot; title=&quot;super&quot;&gt;&lt;/a&gt;super&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;当new一个子类对象的时候，会先创建一个父类对象&lt;/code&gt;。可以认为，在调用子类构造器之前，在子类构造器中会先调用父类的构造器，默认调用的是父类无参数的构造器。调用父类构造器后悔创建一个父类的对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果父类不存在可以被子类访问的构造器，则不能存在子类，即子类不会被创建成功。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果父类没有提供无参数的构造器，则此时子类必须显式的通过&lt;code&gt;super&lt;/code&gt;语句去掉用父类带参数的构造器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子类构建的所有的行为建立在第一条规则基础之上。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java方法的值传递机制</title>
    <link href="http://kunxiang.wang/2018/10/26/Java%E6%96%B9%E6%B3%95%E7%9A%84%E5%80%BC%E4%BC%A0%E9%80%92%E6%9C%BA%E5%88%B6/"/>
    <id>http://kunxiang.wang/2018/10/26/Java方法的值传递机制/</id>
    <published>2018-10-26T02:48:38.000Z</published>
    <updated>2018-10-26T07:08:13.589Z</updated>
    
    <content type="html"><![CDATA[<ul><li>对于基本数据类型(八种基本数据类型)来说，方法形参传递的是<code>值的副本</code>;</li><li>对于引用数据类型，方法的形参传递的是<code>引用的地址值的副本</code>;</li></ul><p>对于引用数据类型，JVM中的存储图如下：</p><p><img src="https://upload-images.jianshu.io/upload_images/2952111-24d050aa031dd985.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="IMG_0013.PNG"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;对于基本数据类型(八种基本数据类型)来说，方法形参传递的是&lt;code&gt;值的副本&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;对于引用数据类型，方法的形参传递的是&lt;code&gt;引用的地址值的副本&lt;/code&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于引用数据类型，JVM中的存储图如
      
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
</feed>
