<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Quentin&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kunxiang.wang/"/>
  <updated>2018-11-01T03:34:45.145Z</updated>
  <id>http://kunxiang.wang/</id>
  
  <author>
    <name>ByiProX</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redis之哈希数据类型的内部编码</title>
    <link href="http://kunxiang.wang/2018/11/01/Redis%E4%B9%8B%E5%93%88%E5%B8%8C%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%86%85%E9%83%A8%E7%BC%96%E7%A0%81/"/>
    <id>http://kunxiang.wang/2018/11/01/Redis之哈希数据类型的内部编码/</id>
    <published>2018-11-01T03:25:48.000Z</published>
    <updated>2018-11-01T03:34:45.145Z</updated>
    
    <content type="html"><![CDATA[<p>哈希类型内部编码有两种形式：</p><ol><li><p><code>ziplist</code>(压缩列表，感觉与python中的zip方法类似，有待验证)：当哈希类型元素个数小于<code>hash-max-ziplist-entries</code>配置(默认512)、同时所有值都小于<code>hash-max-ziplist-value</code>配置(默认64字节)，Redis会使用ziplist作为哈希的内部实现。ziplist使用更加紧凑结构实现多个元素的连续存储，所以在节省内存方面比hashtable更有优势。</p></li><li><p><code>hashtable</code>(哈希表)：当哈希类型无法满足ziplist条件时，Redis会使用hashtable作为哈希的内部实现，因此此时ziplist读写效率会下降，hashtable读写的时间复杂度为O(1).</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;哈希类型内部编码有两种形式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;(压缩列表，感觉与python中的zip方法类似，有待验证)：当哈希类型元素个数小于&lt;code&gt;hash-max-ziplist-entries&lt;/code&gt;配置(默认51
      
    
    </summary>
    
      <category term="Redis" scheme="http://kunxiang.wang/categories/Redis/"/>
    
      <category term="Redis哈希数据类型" scheme="http://kunxiang.wang/categories/Redis/Redis%E5%93%88%E5%B8%8C%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
    
      <category term="Redis" scheme="http://kunxiang.wang/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Java包装类中的缓存设计</title>
    <link href="http://kunxiang.wang/2018/10/30/Java%E5%8C%85%E8%A3%85%E7%B1%BB%E4%B8%AD%E7%9A%84%E7%BC%93%E5%AD%98%E8%AE%BE%E8%AE%A1/"/>
    <id>http://kunxiang.wang/2018/10/30/Java包装类中的缓存设计/</id>
    <published>2018-10-30T07:13:26.000Z</published>
    <updated>2018-10-30T07:50:02.617Z</updated>
    
    <content type="html"><![CDATA[<p>包装类中的<code>缓存设计</code>(<a href="https://baike.baidu.com/item/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/10541959?fr=aladdin" target="_blank" rel="noopener">享元模式-FlyWeight</a>)，本质就是缓存设计。</p><p><code>Byte/Short/Integer/Long</code>:缓存[-128, 127]区间的数据；<br><code>Character</code>:缓存[0,127]区间的数据.<br><a id="more"></a><br>首先来看一个有意思的面试题</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//case 1</span></span><br><span class="line">        Integer i1 = <span class="keyword">new</span> Integer(<span class="number">123</span>);</span><br><span class="line">        Integer i2 = <span class="keyword">new</span> Integer(<span class="number">123</span>);</span><br><span class="line">        System.out.println(i1 == i2); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//case 2</span></span><br><span class="line">        Integer i3 = Integer.valueOf(<span class="number">123</span>);</span><br><span class="line">        Integer i4 = Integer.valueOf(<span class="number">123</span>);</span><br><span class="line">        System.out.println(i3 == i4); <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//case 3</span></span><br><span class="line">        Integer i5 = <span class="number">123</span>; <span class="comment">//自动装箱操作，底层编译后代码为Integer.valueOf(123);    和case2相同</span></span><br><span class="line">        Integer i6 = <span class="number">123</span>;</span><br><span class="line">        System.out.println(i5 == i6); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//case 4</span></span><br><span class="line">        Integer ii1 = <span class="keyword">new</span> Integer(<span class="number">250</span>);</span><br><span class="line">        Integer ii2 = <span class="keyword">new</span> Integer(<span class="number">250</span>);</span><br><span class="line">        System.out.println(ii1 == ii2); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//case 5</span></span><br><span class="line">        Integer ii3 = Integer.valueOf(<span class="number">250</span>); <span class="comment">// 250不在缓存区间内，就得new新对象</span></span><br><span class="line">        Integer ii4 = Integer.valueOf(<span class="number">250</span>);</span><br><span class="line">        System.out.println(ii3 == ii4); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// case 6</span></span><br><span class="line">        Integer ii5 = <span class="number">250</span>;</span><br><span class="line">        Integer ii6 = <span class="number">250</span>;</span><br><span class="line">        System.out.println(ii5 == ii6); <span class="comment">// false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看一下integer源码,如下所示。可以看到Integer的缓存空间在[-128, 127]之间。<br>当传入的数值在此区间内时，之间调用缓存内的数据。反之，重新<code>return new Integer(i);</code>在堆空间返回一个新整形对象。</p><p>那么我们应该如何比较两个对象的值得大小呢？<br>正确的方法是使用<code>equals</code>来比较，equals方法来自于Object根对象，按照官方的建议，在构造子类对象时需要复写父类中的equals方法，来比较我们关心的数据，而不是内存地址（<code>==</code>比较的是内存地址）。现将Integer中的equals拿出来检查一下复写情况</p><p><code>((Integer)obj).intValue()</code>拆箱操作，<code>value == ((Integer)obj).intValue();</code>使用基本的数据类型进行比较。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Integer) &#123;</span><br><span class="line">        <span class="keyword">return</span> value == ((Integer)obj).intValue(); <span class="comment">// 拆箱操作，比较基本数据类型</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">valueOf</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)</span><br><span class="line">            <span class="keyword">return</span> IntegerCache.cache[i + (-IntegerCache.low)];</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Integer(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">IntegerCache</span> </span>&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> low = -<span class="number">128</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> high;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> Integer cache[];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">static</span> &#123; <span class="comment">// 初始化操作</span></span><br><span class="line">            <span class="comment">// high value may be configured by property</span></span><br><span class="line">            <span class="keyword">int</span> h = <span class="number">127</span>;</span><br><span class="line">            String integerCacheHighPropValue =</span><br><span class="line">                sun.misc.VM.getSavedProperty(<span class="string">"java.lang.Integer.IntegerCache.high"</span>);</span><br><span class="line">            <span class="keyword">if</span> (integerCacheHighPropValue != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">int</span> i = parseInt(integerCacheHighPropValue);</span><br><span class="line">                    i = Math.max(i, <span class="number">127</span>);</span><br><span class="line">                    <span class="comment">// Maximum array size is Integer.MAX_VALUE</span></span><br><span class="line">                    h = Math.min(i, Integer.MAX_VALUE - (-low) -<span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span>( NumberFormatException nfe) &#123;</span><br><span class="line">                    <span class="comment">// If the property cannot be parsed into an int, ignore it.</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            high = h;</span><br><span class="line"></span><br><span class="line">            cache = <span class="keyword">new</span> Integer[(high - low) + <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> j = low;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; cache.length; k++)</span><br><span class="line">                cache[k] = <span class="keyword">new</span> Integer(j++);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// range [-128, 127] must be interned (JLS7 5.1.7)</span></span><br><span class="line">            <span class="keyword">assert</span> IntegerCache.high &gt;= <span class="number">127</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">IntegerCache</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;包装类中的&lt;code&gt;缓存设计&lt;/code&gt;(&lt;a href=&quot;https://baike.baidu.com/item/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/10541959?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;享元模式-FlyWeight&lt;/a&gt;)，本质就是缓存设计。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Byte/Short/Integer/Long&lt;/code&gt;:缓存[-128, 127]区间的数据；&lt;br&gt;&lt;code&gt;Character&lt;/code&gt;:缓存[0,127]区间的数据.&lt;br&gt;
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java中的单例模式</title>
    <link href="http://kunxiang.wang/2018/10/30/Java%E4%B8%AD%E7%9A%84%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://kunxiang.wang/2018/10/30/Java中的单例模式/</id>
    <published>2018-10-30T04:00:22.000Z</published>
    <updated>2018-10-30T04:04:25.179Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-饿汉模式"><a href="#1-饿汉模式" class="headerlink" title="1. 饿汉模式"></a>1. 饿汉模式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayUtil.getInstance().sort(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArrayUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1. 在该类中，实例化一个实例</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ArrayUtil instance = <span class="keyword">new</span> ArrayUtil();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 私有化自身的构造器，防止外界通过构造器new对象</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ArrayUtil</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3. 对外开放一个静态公共方法，用于获取对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ArrayUtil <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//此处编写排序代码</span></span><br><span class="line">        System.out.println(<span class="string">"I'm sorting "</span> + array);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-饿汉模式&quot;&gt;&lt;a href=&quot;#1-饿汉模式&quot; class=&quot;headerlink&quot; title=&quot;1. 饿汉模式&quot;&gt;&lt;/a&gt;1. 饿汉模式&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java中的代码块</title>
    <link href="http://kunxiang.wang/2018/10/30/Java%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%A0%81%E5%9D%97/"/>
    <id>http://kunxiang.wang/2018/10/30/Java中的代码块/</id>
    <published>2018-10-30T01:24:49.000Z</published>
    <updated>2018-10-30T02:43:22.581Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>什么是代码块：在类或者方法中，直接使用<code>{}</code>括起来的一段代码，表示一块带啊区域。</p></blockquote><p>代码在块中属于局部变量，只在自己所在的花括号区域内有效。<br>根据代码块所定义的位置不同，代码块分为三种形式</p><ol><li><p><code>局部代码块</code>：直接定义在<code>方法内部</code>的代码块。<br>一般的，不会直接使用局部代码块，只不过会结合if、while等关键字，表示一块代码区域。</p></li><li><p><code>初始化代码块(构造代码块)</code>：直接定义在<code>类</code>中。<br>每次创建对象的时候都会执行初始化代码块：每次创建对象的时候都会调用构造器，在调用构造器之前，会先执行本类中的初始化代码块。<code>PS</code>:<code>通过反编译，可以看到，初始化代码也作为构造器最初的语句。</code>一般不使用这种用法，因为不够优雅美观。即使要初始化操作，一般在构造器中进行初始化即可。或者专门定义一个方法做初始化操作，方法哦构造器中进行调用。</p></li><li><p><code>静态代码块：使用static修饰的初始化代码块。</code><br>静态代码块在主方法执行之前进行调用，而且只会执行一次。main方法是程序的入口，静态代码块由于main方法执行。静态成员随着字节码的加载也加载进JVM,此时main还没执行，因为方法需要JVM调用，先把字节码加载进JVM，然后JVM再调用main方法。<code>一般的，我们使用静态代码块来做初始化操作，加载资源，加载配置文件等。</code></p></li></ol><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CodeBlockDemo</span></span>&#123;</span><br><span class="line">  &#123;</span><br><span class="line">    System.out.println(<span class="string">"初始化代码块"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  CodeBlockDemo()&#123;</span><br><span class="line">    System.out.println(<span class="string">"构造器。。。"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"静态代码块"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"进入main方法"</span>);</span><br><span class="line">    <span class="comment">//创建三个匿名对象</span></span><br><span class="line">    <span class="keyword">new</span> CodeBlockDemo();</span><br><span class="line">    <span class="keyword">new</span> CodeBlockDemo();</span><br><span class="line">    <span class="keyword">new</span> CodeBlockDemo();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*执行结果如下</span></span><br><span class="line"><span class="comment">静态代码块</span></span><br><span class="line"><span class="comment">进入main方法</span></span><br><span class="line"><span class="comment">初始化代码块</span></span><br><span class="line"><span class="comment">构造器。。。</span></span><br><span class="line"><span class="comment">初始化代码块</span></span><br><span class="line"><span class="comment">构造器。。。</span></span><br><span class="line"><span class="comment">初始化代码块</span></span><br><span class="line"><span class="comment">构造器。。。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>一道Java面试题<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> App d = <span class="keyword">new</span> App();</span><br><span class="line">    <span class="keyword">private</span> SuperClass t = <span class="keyword">new</span> SubClass(); <span class="comment">//先确定依赖，由此开始作为入口</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    App()&#123;</span><br><span class="line">        System.out.println(<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SuperClass</span></span>&#123;</span><br><span class="line">    SuperClass()&#123;</span><br><span class="line">        System.out.println(<span class="string">"构造SuperClass"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubClass</span> <span class="keyword">extends</span> <span class="title">SuperClass</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SubClass()&#123;</span><br><span class="line">        <span class="comment">//super();</span></span><br><span class="line">        System.out.println(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//执行结果</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">构造SuperClass</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">Hello</span><br></pre></td></tr></table></figure></p><p><code>分析：</code></p><ol><li>首先在执行子类subclass构造器的时候先执行隐藏的<code>super();</code>来执行父类的构造器，也就是构造<code>SuperClass</code>在<code>2</code>之前打印.</li><li><p>为什么不先打印4而是先打印子类的1？原因是class App依赖于依赖于subclass，会优先编译subclass，也就是说会优先编译被依赖的优先存在的类。所以首先把subclass加载到虚拟机，因此首先打印1.<code>编译的时候首先确定依赖!!!</code></p></li><li><p>非static字段的初始化都在构造器中执行，也就是说App类反编译后如下。可以看出，打印<code>1</code>后,在APP构造器中实例化subclass，此时，先打印父类构造器中的<code>构造SuperClass</code>,然后打印子类的<code>2</code>。紧接着继续执行APP构造器的代码块，打印app构造器中的<code>3</code>。</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> App d = <span class="keyword">new</span> App();</span><br><span class="line">    <span class="keyword">private</span> SuperClass t = <span class="keyword">null</span>; <span class="comment">//先确定依赖，由此开始作为入口</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    App()&#123;</span><br><span class="line">        t = <span class="keyword">new</span> SubClass(); <span class="comment">//非static字段的初始化都在构造器中执行</span></span><br><span class="line">        System.out.println(<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>以上依赖关系确认完毕，然后开始将App加载进虚拟机，执行由于静态代码块优先于main，静态代码块执行，打印4，最后执行main方法，打印hello.</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;什么是代码块：在类或者方法中，直接使用&lt;code&gt;{}&lt;/code&gt;括起来的一段代码，表示一块带啊区域。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;代码在块中属于局部变量，只在自己所在的花括号区域内有效。&lt;br&gt;根据代码块所定义的位置不同，代码块分为三种形式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;局部代码块&lt;/code&gt;：直接定义在&lt;code&gt;方法内部&lt;/code&gt;的代码块。&lt;br&gt;一般的，不会直接使用局部代码块，只不过会结合if、while等关键字，表示一块代码区域。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;初始化代码块(构造代码块)&lt;/code&gt;：直接定义在&lt;code&gt;类&lt;/code&gt;中。&lt;br&gt;每次创建对象的时候都会执行初始化代码块：每次创建对象的时候都会调用构造器，在调用构造器之前，会先执行本类中的初始化代码块。&lt;code&gt;PS&lt;/code&gt;:&lt;code&gt;通过反编译，可以看到，初始化代码也作为构造器最初的语句。&lt;/code&gt;一般不使用这种用法，因为不够优雅美观。即使要初始化操作，一般在构造器中进行初始化即可。或者专门定义一个方法做初始化操作，方法哦构造器中进行调用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;静态代码块：使用static修饰的初始化代码块。&lt;/code&gt;&lt;br&gt;静态代码块在主方法执行之前进行调用，而且只会执行一次。main方法是程序的入口，静态代码块由于main方法执行。静态成员随着字节码的加载也加载进JVM,此时main还没执行，因为方法需要JVM调用，先把字节码加载进JVM，然后JVM再调用main方法。&lt;code&gt;一般的，我们使用静态代码块来做初始化操作，加载资源，加载配置文件等。&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java编译类型和运行类型</title>
    <link href="http://kunxiang.wang/2018/10/29/Java%E7%BC%96%E8%AF%91%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E8%A1%8C%E7%B1%BB%E5%9E%8B/"/>
    <id>http://kunxiang.wang/2018/10/29/Java编译类型和运行类型/</id>
    <published>2018-10-29T14:00:41.000Z</published>
    <updated>2018-10-29T14:18:16.575Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line">Animal a = <span class="keyword">new</span> Dog();</span><br><span class="line">a.eat()<span class="comment">//编译报错</span></span><br><span class="line">((Dog) a).run()<span class="comment">//编译通过</span></span><br></pre></td></tr></table></figure><p>如上的简易代码，编译时会报错。<br>编译类型：Animal a<br>运行类型：new Dog()</p><p>编译时，编译类型会根据a.eat()查找eat方法，找不到就会报错。<br>使用强制类型转换可以解决该问题，即<br>((Dog) a).run()</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java之Object根类</title>
    <link href="http://kunxiang.wang/2018/10/29/Java%E4%B9%8BObject%E6%A0%B9%E7%B1%BB/"/>
    <id>http://kunxiang.wang/2018/10/29/Java之Object根类/</id>
    <published>2018-10-29T03:48:41.000Z</published>
    <updated>2018-10-29T05:11:33.301Z</updated>
    
    <content type="html"><![CDATA[<p>Object本身就是指对象的意思。开发时发现对象具有一些共通的行为，因此抽象出一个类：Object，来表示对象类，其他都会继承于Object类，也就是Object中的方法。</p><p><code>引用数据类型：类/接口/数组</code>，<code>引用类型又称为对象类</code>，<code>所谓的数组变量名称应该指代数组对象</code>。<br>Object类常用方法：</p><ol><li><p><code>protected void finalize()</code>:当垃圾回收器确定不存在对该对象的更多引用时，由对象回收期调用此方法。垃圾回收器在回收某一个对象之前会调用该方法，做扫尾操作。</p></li><li><p><code>Class getClass</code>:返回当前对象的真实类型。</p></li><li><p><code>int hashCode()</code>:返回该对象的哈希值，hashCode决定了对象在哈希表中的存储位置，不同对象的hashCode是不一样的。</p></li><li><p><code>boolean equals(Object obj)</code>: 拿当前对象(this)和参数obj比较。在Object类中的equals方法，本身和’==’符号相同，都是比较的内存地址。官方建议：每个类都应该赋写equals方法，不要比较内存地址，而是比较我们关心的数据。</p></li><li><p><code>String toString()</code>:表示把一个对象转换为字符串表示。在调用打印时，其实打印的就是对象的toString方法。<code>System.out.println(obj);</code>等价于<code>System.out.println(obj.toString);</code>(决堤可以查看Java源代码)。默认情况下打印对象，打印的是对象的十六进制hashCode,但我们更关心对象中的真实存储数据。官方建议：每个类最好赋写toString方法，返回我们关心的数据。</p></li></ol><p><img src="https://upload-images.jianshu.io/upload_images/2952111-d5a996ebf97c420b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screen Shot 2018-10-29 at 12.08.42.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Object本身就是指对象的意思。开发时发现对象具有一些共通的行为，因此抽象出一个类：Object，来表示对象类，其他都会继承于Object类，也就是Object中的方法。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;引用数据类型：类/接口/数组&lt;/code&gt;，&lt;code&gt;引用类型又称为对象
      
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java之super和this</title>
    <link href="http://kunxiang.wang/2018/10/29/Java%E4%B9%8Bsuper%E5%92%8Cthis/"/>
    <id>http://kunxiang.wang/2018/10/29/Java之super和this/</id>
    <published>2018-10-29T01:31:49.000Z</published>
    <updated>2018-10-29T03:06:58.118Z</updated>
    
    <content type="html"><![CDATA[<p>this: 当前的对象，哪一个对象调用this，this就代指哪一个对象。使用在某一个对象中。<br>super: 当前对象的父类方法或构造器。使用在继承关系中。</p><h4 id="super"><a href="#super" class="headerlink" title="super"></a>super</h4><ol><li><p><code>当new一个子类对象的时候，会先创建一个父类对象</code>。可以认为，在调用子类构造器之前，在子类构造器中会先调用父类的构造器，默认调用的是父类无参数的构造器。调用父类构造器后悔创建一个父类的对象。</p></li><li><p>如果父类不存在可以被子类访问的构造器，则不能存在子类，即子类不会被创建成功。</p></li><li><p>如果父类没有提供无参数的构造器，则此时子类必须显式的通过<code>super</code>语句去掉用父类带参数的构造器。</p></li><li><p>子类构建的所有的行为建立在第一条规则基础之上。</p></li></ol><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>    age;</span><br><span class="line">    Animal(String name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        System.out.println(<span class="string">"animal constructor"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Animal(String color)&#123;</span><br><span class="line">        System.out.println(<span class="string">"this is a "</span> + color +<span class="string">" color"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Animals Say sth..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fish</span> <span class="keyword">extends</span> <span class="title">Animal</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String color;</span><br><span class="line">    Fish()&#123;</span><br><span class="line">       <span class="comment">//构造器中的第一句必须为super，如果不写，则默认调用super()</span></span><br><span class="line">       <span class="keyword">super</span>(<span class="string">"RED"</span>); <span class="comment">//子类没有提供无参数的构造器，必须显示super滴啊用，否则会编译失败</span></span><br><span class="line">       System.out.println(<span class="string">"Fish Constructor"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个简单的示意图如下：<br><img src="https://upload-images.jianshu.io/upload_images/2952111-2db47a7c0f8a1ec1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screen Shot 2018-10-28 at 22.12.48.png"></p><h4 id="this"><a href="#this" class="headerlink" title="this"></a>this</h4><h5 id="存在于位置"><a href="#存在于位置" class="headerlink" title="存在于位置"></a>存在于位置</h5><ol><li>在构造器中，表示当前创建的对象</li><li>在方法中，哪一个对象调用this所在的方法，那么此时this就表示哪一个对象。</li></ol><p><img src="https://upload-images.jianshu.io/upload_images/2952111-bf1b724c2da63d77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screen Shot 2018-10-28 at 16.28.10.png"></p><h5 id="this的使用"><a href="#this的使用" class="headerlink" title="this的使用"></a>this的使用</h5><ol><li>解决成员变量的参数（局部变量）之间的二义性，必须使用this区分</li><li>同类中实例方法互相调用时可以省略this关键字，但是不建议省略</li><li>将this作为参数传递给另外一个方法</li><li>将this作为方法的返回值（链式方法编程）</li><li>构造器函数的互相调用，this([参数])必须写在构造器内的第一行，与super类似。</li><li>this、super不能static一起使用。原因是当字节码被加载进jvm时，static成员已经存在了，但是此时对象还没有被创建，没有对象，也就没有this。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">User(String name)&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line">User(String name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">  <span class="keyword">this</span>(name); <span class="comment">//表示在调用参数为string类型的构造器</span></span><br><span class="line">  <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//上述调用方式为多参数构造器调用少参数构造器，一般工程经验为少参数构造器调用多参数构造器</span></span><br><span class="line"><span class="comment">//对于多余的参数，使用默认值赋值即可，如下</span></span><br><span class="line">User(String name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name;</span><br><span class="line">  <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">User(String name)&#123;</span><br><span class="line">  <span class="keyword">this</span>(name, <span class="number">0</span>);<span class="comment">//此处对int age赋值为0即可</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/2952111-955c8e05df6fd8ef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screen Shot 2018-10-28 at 16.41.16.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2952111-1d10520f4fc5a369.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screen Shot 2018-10-28 at 16.58.54.png"></p><p>是</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;this: 当前的对象，哪一个对象调用this，this就代指哪一个对象。使用在某一个对象中。&lt;br&gt;super: 当前对象的父类方法或构造器。使用在继承关系中。&lt;/p&gt;
&lt;h4 id=&quot;super&quot;&gt;&lt;a href=&quot;#super&quot; class=&quot;headerlink&quot; title=&quot;super&quot;&gt;&lt;/a&gt;super&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;当new一个子类对象的时候，会先创建一个父类对象&lt;/code&gt;。可以认为，在调用子类构造器之前，在子类构造器中会先调用父类的构造器，默认调用的是父类无参数的构造器。调用父类构造器后悔创建一个父类的对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果父类不存在可以被子类访问的构造器，则不能存在子类，即子类不会被创建成功。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果父类没有提供无参数的构造器，则此时子类必须显式的通过&lt;code&gt;super&lt;/code&gt;语句去掉用父类带参数的构造器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子类构建的所有的行为建立在第一条规则基础之上。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java方法的值传递机制</title>
    <link href="http://kunxiang.wang/2018/10/26/Java%E6%96%B9%E6%B3%95%E7%9A%84%E5%80%BC%E4%BC%A0%E9%80%92%E6%9C%BA%E5%88%B6/"/>
    <id>http://kunxiang.wang/2018/10/26/Java方法的值传递机制/</id>
    <published>2018-10-26T02:48:38.000Z</published>
    <updated>2018-10-26T07:08:13.589Z</updated>
    
    <content type="html"><![CDATA[<ul><li>对于基本数据类型(八种基本数据类型)来说，方法形参传递的是<code>值的副本</code>;</li><li>对于引用数据类型，方法的形参传递的是<code>引用的地址值的副本</code>;</li></ul><p>对于引用数据类型，JVM中的存储图如下：</p><p><img src="https://upload-images.jianshu.io/upload_images/2952111-24d050aa031dd985.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="IMG_0013.PNG"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;对于基本数据类型(八种基本数据类型)来说，方法形参传递的是&lt;code&gt;值的副本&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;对于引用数据类型，方法的形参传递的是&lt;code&gt;引用的地址值的副本&lt;/code&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于引用数据类型，JVM中的存储图如
      
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>四种方法实现交换两个变量的值</title>
    <link href="http://kunxiang.wang/2018/10/25/%E5%9B%9B%E7%A7%8D%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0%E4%BA%A4%E6%8D%A2%E4%B8%A4%E4%B8%AA%E5%8F%98%E9%87%8F%E7%9A%84%E5%80%BC/"/>
    <id>http://kunxiang.wang/2018/10/25/四种方法实现交换两个变量的值/</id>
    <published>2018-10-25T01:38:37.000Z</published>
    <updated>2018-10-26T03:07:50.307Z</updated>
    
    <content type="html"><![CDATA[<h4 id="方法1-位运算"><a href="#方法1-位运算" class="headerlink" title="方法1 位运算"></a>方法1 位运算</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = a ^ b</span><br><span class="line">b = a ^ b</span><br><span class="line">a = a ^ b</span><br><span class="line"></span><br><span class="line">原理：a^b^b == a</span><br></pre></td></tr></table></figure><h4 id="方法2-栈实现"><a href="#方法2-栈实现" class="headerlink" title="方法2 栈实现"></a>方法2 栈实现</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">stack</span> S</span><br><span class="line"></span><br><span class="line">S.push(x)</span><br><span class="line">S.push(y)</span><br><span class="line">x = S.pop()</span><br><span class="line">y = S.pop()</span><br></pre></td></tr></table></figure><h4 id="方法3-借助第三变量"><a href="#方法3-借助第三变量" class="headerlink" title="方法3 借助第三变量"></a>方法3 借助第三变量</h4><h4 id="方法4-算术运算"><a href="#方法4-算术运算" class="headerlink" title="方法4 算术运算"></a>方法4 算术运算</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;方法1-位运算&quot;&gt;&lt;a href=&quot;#方法1-位运算&quot; class=&quot;headerlink&quot; title=&quot;方法1 位运算&quot;&gt;&lt;/a&gt;方法1 位运算&lt;/h4&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
    
      <category term="Funny" scheme="http://kunxiang.wang/tags/Funny/"/>
    
  </entry>
  
  <entry>
    <title>Java中的+=赋值运算</title>
    <link href="http://kunxiang.wang/2018/10/24/Java%E4%B8%AD%E7%9A%84-%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97/"/>
    <id>http://kunxiang.wang/2018/10/24/Java中的-赋值运算/</id>
    <published>2018-10-24T07:22:03.000Z</published>
    <updated>2018-10-24T07:38:47.392Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">a += <span class="number">5</span>;</span><br><span class="line">System.out.println(a); <span class="comment">//15</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">short</span> s = <span class="number">30</span>;</span><br><span class="line">s = s + <span class="number">5</span>;<span class="comment">//编译报错</span></span><br><span class="line"><span class="comment">//Error:(23, 15) java: incompatible types: possible lossy conversion from int to short</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">short</span> s = <span class="number">30</span>;</span><br><span class="line">s += <span class="number">5</span>;<span class="comment">//等价于 s = short(s+5),该表达式自带隐式类型转换</span></span><br></pre></td></tr></table></figure><p>上述代码中，变量s为short类型，<code>s+5</code>的结果为int类型，int类型赋值给short类型，编译报错。<br>错误信息为如下：<br><code>Error:(23, 15) java: incompatible types: possible lossy conversion from int to short</code></p><p>关于<code>自动类型转换</code>，也称为<code>隐式类型转换</code><br>当把<code>小数据范围类型的数值或变量</code>赋值给另一个<code>大数据范围类型变量</code>时，系统可以自动完成类型转换。<br>boolean类型是不可以转换为其他数据类型。</p><p><code>强制类型转换</code>，也称为<code>显示类型转换</code><br>当把<code>大范围类型的数值或变量</code>赋值给另一个<code>小范围类型变量</code>时，此时系统不能自动完成转换，需要加上强制转换符，但这样的操作可能在成数据精度的降低或溢出，使用时需要格外注意。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="Java" scheme="http://kunxiang.wang/categories/Java/"/>
    
    
      <category term="Java" scheme="http://kunxiang.wang/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>C语言中的&#39;if(n==1)&#39;和&#39;if(1==n)&#39;的区别</title>
    <link href="http://kunxiang.wang/2018/09/29/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84-if-n-1-%E5%92%8C-if-1-n-%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://kunxiang.wang/2018/09/29/C语言中的-if-n-1-和-if-1-n-的区别/</id>
    <published>2018-09-28T16:04:53.000Z</published>
    <updated>2018-09-29T05:19:57.158Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>C语言中两种if语句判断方式。请问哪种写法更好？为什么？<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>) <span class="comment">// 第一种判断方式</span></span><br><span class="line"><span class="keyword">if</span> (<span class="number">1</span> == n) <span class="comment">// 第二种判断方式</span></span><br></pre></td></tr></table></figure></p></blockquote><a id="more"></a><h4 id="第一种写法"><a href="#第一种写法" class="headerlink" title="第一种写法"></a>第一种写法</h4><h5 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h5><ul><li>在写判断语句的时候很容易漏写一个“=” ,比如把<br><code>if (n == 1) { } 写成 if (n = 1) { }</code>。<br>而在C中 “n = 1” 是有返回值的， 这个返回值是1， 于是原语句相当于<br>if ( 1 ) { } ,即条件永远为真，{ } 内的代码始终能够得到执行，当这样的<br>错误深深埋藏在代码当中，非常难以debug。</li></ul><h5 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h5><ul><li>主要目的是防止写成if(n = 1)而导致错误,但现在的编译器一般会给出警告信息所以现在不常用了.第1种更符合习惯,只要把相应的编译选项打开,一般不会出问题。</li></ul><h4 id="第二种写法"><a href="#第二种写法" class="headerlink" title="第二种写法"></a>第二种写法</h4><h5 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h5><ul><li>反人类<h5 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h5></li><li><p>if ( 1 == n ) { } 及时少写一个”=”, 编译器就会报错，省得在运行期调试<br>得死去活来。</p></li><li><p>会省掉很多  debug  的时间的。</p></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;C语言中两种if语句判断方式。请问哪种写法更好？为什么？&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 第一种判断方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; == n) &lt;span class=&quot;comment&quot;&gt;// 第二种判断方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="面试" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="面试" scheme="http://kunxiang.wang/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>如何理解http是无连接，无状态的？</title>
    <link href="http://kunxiang.wang/2018/09/28/%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3http%E6%98%AF%E6%97%A0%E8%BF%9E%E6%8E%A5%EF%BC%8C%E6%97%A0%E7%8A%B6%E6%80%81%E7%9A%84%EF%BC%9F/"/>
    <id>http://kunxiang.wang/2018/09/28/如何理解http是无连接，无状态的？/</id>
    <published>2018-09-28T08:46:24.000Z</published>
    <updated>2018-09-28T13:45:26.772Z</updated>
    
    <content type="html"><![CDATA[<p>HTTP 是一个属于应用层的面向对象的协议，HTTP 协议一共有五大特点：</p><ol><li>支持客户/服务器模式；</li><li>简单快速；</li><li>灵活；</li><li><code>无连接</code>；</li><li><code>无状态</code>。</li></ol><h4 id="无连接"><a href="#无连接" class="headerlink" title="无连接"></a>无连接</h4><p><code>无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</code></p><blockquote><p>ps:早期这么做的原因是 HTTP 协议产生于互联网，因此服务器需要处理同时面向全世界数十万、上百万客户端的网页访问，但每个客户端（即浏览器）与服务器之间交换数据的间歇性较大（即传输具有突发性、瞬时性），并且网页浏览的联想性、发散性导致两次传送的数据关联性很低，大部分通道实际上会很空闲、无端占用资源。因此 <code>HTTP 的设计者有意利用这种特点将协议设计为请求时建连接、请求完释放连接，以尽快将资源释放出来服务其他客户端</code></p></blockquote><p>随着时间的推移，网页变得越来越复杂，里面可能嵌入了很多图片，这时候每次访问图片都需要建立一次 TCP 连接就显得很低效。后来，<code>Keep-Alive</code> 被提出用来解决这效率低的问题。</p><p>Keep-Alive 功能使客户端到服务器端的连接持续有效，当出现对服务器的后继请求时，Keep-Alive 功能避免了建立或者重新建立连接。市场上的大部分 Web 服务器，包括 iPlanet、IIS 和 Apache，都支持 HTTP Keep-Alive。对于提供静态内容的网站来说，这个功能通常很有用。但是，对于负担较重的网站来说，这里存在另外一个问题：虽然为客户保留打开的连接有一定的好处，但它同样影响了性能，<code>因为在处理暂停期间，本来可以释放的资源仍旧被占用。当Web服务器和应用服务器在同一台机器上运行时，Keep-Alive 功能对资源利用的影响尤其突出。</code></p><p>这样一来，客户端和服务器之间的 HTTP 连接就会被保持，不会断开（超过 Keep-Alive 规定的时间，意外断电等情况除外），当客户端发送另外一个请求时，就使用这条已经建立的连接。</p><a id="more"></a><h4 id="无状态"><a href="#无状态" class="headerlink" title="无状态"></a>无状态</h4><p>协议的状态是指<code>下一次传输</code>可以“记住”<code>这次传输</code>信息的能力，http是不会为了下一次连接而维护这次连接所传输的信息的.<br>HTTP无状态是指，当浏览器发送请求给服务器的时候，服务器响应，但是同一个浏览器再发送请求给服务器的时候，它会响应，但是他不知道你就是刚才那个浏览器，简单地说，就是服务器不会去记得你，所以是无状态协议。</p><p>无状态是指协议对于事务处理没有记忆能力，服务器不知道客户端是什么状态。即我们给服务器发送 HTTP 请求之后，服务器根据请求，会给我们发送数据过来，但是，发送完，不会记录任何信息。<br><code>HTTP 是一个无状态协议，这意味着每个请求都是独立的，Keep-Alive 没能改变这个结果。</code><br>HTTP 协议这种特性有优点也有缺点，优点在于解放了服务器，每一次请求“点到为止”不会造成不必要连接占用，缺点在于每次请求可能会传输大量重复的内容信息。</p><blockquote><p>ps:客户端与服务器进行动态交互的 Web 应用程序出现之后，HTTP 无状态的特性严重阻碍了这些应用程序的实现，毕竟交互是需要承前启后的，简单的购物车程序也要知道用户到底在之前选择了什么商品。于是，两种用于保持 HTTP 连接状态的技术就应运而生了，一个是 <code>Cookie</code>，而另一个则是 <code>Session</code>。</p></blockquote><hr><p>本文来自 Mike__Jiang 的CSDN 博客 ，全文地址请点击：<a href="https://blog.csdn.net/tennysonsky/article/details/44562435?utm_source=copy" target="_blank" rel="noopener">https://blog.csdn.net/tennysonsky/article/details/44562435?utm_source=copy</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTTP 是一个属于应用层的面向对象的协议，HTTP 协议一共有五大特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;支持客户/服务器模式；&lt;/li&gt;
&lt;li&gt;简单快速；&lt;/li&gt;
&lt;li&gt;灵活；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;无连接&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;无状态&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;无连接&quot;&gt;&lt;a href=&quot;#无连接&quot; class=&quot;headerlink&quot; title=&quot;无连接&quot;&gt;&lt;/a&gt;无连接&lt;/h4&gt;&lt;p&gt;&lt;code&gt;无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ps:早期这么做的原因是 HTTP 协议产生于互联网，因此服务器需要处理同时面向全世界数十万、上百万客户端的网页访问，但每个客户端（即浏览器）与服务器之间交换数据的间歇性较大（即传输具有突发性、瞬时性），并且网页浏览的联想性、发散性导致两次传送的数据关联性很低，大部分通道实际上会很空闲、无端占用资源。因此 &lt;code&gt;HTTP 的设计者有意利用这种特点将协议设计为请求时建连接、请求完释放连接，以尽快将资源释放出来服务其他客户端&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;随着时间的推移，网页变得越来越复杂，里面可能嵌入了很多图片，这时候每次访问图片都需要建立一次 TCP 连接就显得很低效。后来，&lt;code&gt;Keep-Alive&lt;/code&gt; 被提出用来解决这效率低的问题。&lt;/p&gt;
&lt;p&gt;Keep-Alive 功能使客户端到服务器端的连接持续有效，当出现对服务器的后继请求时，Keep-Alive 功能避免了建立或者重新建立连接。市场上的大部分 Web 服务器，包括 iPlanet、IIS 和 Apache，都支持 HTTP Keep-Alive。对于提供静态内容的网站来说，这个功能通常很有用。但是，对于负担较重的网站来说，这里存在另外一个问题：虽然为客户保留打开的连接有一定的好处，但它同样影响了性能，&lt;code&gt;因为在处理暂停期间，本来可以释放的资源仍旧被占用。当Web服务器和应用服务器在同一台机器上运行时，Keep-Alive 功能对资源利用的影响尤其突出。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这样一来，客户端和服务器之间的 HTTP 连接就会被保持，不会断开（超过 Keep-Alive 规定的时间，意外断电等情况除外），当客户端发送另外一个请求时，就使用这条已经建立的连接。&lt;/p&gt;
    
    </summary>
    
      <category term="网络" scheme="http://kunxiang.wang/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="网络" scheme="http://kunxiang.wang/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>JSP相关概念</title>
    <link href="http://kunxiang.wang/2018/09/28/JSP%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
    <id>http://kunxiang.wang/2018/09/28/JSP相关概念/</id>
    <published>2018-09-28T02:49:49.000Z</published>
    <updated>2018-09-28T04:38:37.566Z</updated>
    
    <content type="html"><![CDATA[<h4 id="JSP内置对象："><a href="#JSP内置对象：" class="headerlink" title="JSP内置对象："></a>JSP内置对象：</h4><ol><li><p><code>request</code>：负责得到客户端请求的信息，对应类型：javax.servlet.http.HttpServletRequest</p></li><li><p><code>response</code>:负责向客户端发出响应，对应类型：javax.servlet.http.HttpServletResponse</p></li><li><p><code>session</code>:负责保存同一客户端一次会话过程中的一些信息，对应类型：javax.servlet.http.httpsession</p></li><li><p><code>out</code>: 负责管理对客户端的输出，对应类型：javax.serlvet.jsp.jspwriter</p></li><li><p><code>application</code>:表示整个应用环境的信息，对应类型：javax.servlet.servletcontext</p></li><li><p><code>config</code>:表示ServletConfig，对应类型：javax.servlet.servletconfig</p></li><li><p><code>exception</code>:表示页面中发生的异常，可以通过它获得页面异常信息，对应类型：java.lang.exception</p></li><li><p><code>pagecontext</code>:表示这个JSP页面上下文，对应类型：javax.servlet.jsp.pagecontext</p></li><li><p><code>page</code>:表示当前JSP页面本身。</p></li></ol><a id="more"></a><h4 id="JSP的四种作用域"><a href="#JSP的四种作用域" class="headerlink" title="JSP的四种作用域"></a>JSP的四种作用域</h4><ol><li><p><code>page</code>是代表一个页面相关的对象和属性。一个页面由一个编译好的java servlet类（可以带有include指令，但不可以带有include动作）表示。这既包括servlet又包括编译成servlet的jsp页面。</p></li><li><p><code>request</code>是代表与web客户机发出的一个请求相关的对象和属性。一个请求可能跨越多个页面，涉及多个web组件（由于<code>forward</code>指令和<code>include</code>动作的关系）</p></li><li><p><code>session</code>是代表与用于某个web客户机的一个用户体验相关的对象和属性。一个web回话也可以经常跨域多个客户机请求。</p></li><li><p><code>application</code>是代表与整个web应用程序相关的对象和属性。这实质上是跨域整个web应用程序，包括多个页面、请求和回话的一个全局作用域</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;JSP内置对象：&quot;&gt;&lt;a href=&quot;#JSP内置对象：&quot; class=&quot;headerlink&quot; title=&quot;JSP内置对象：&quot;&gt;&lt;/a&gt;JSP内置对象：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;request&lt;/code&gt;：负责得到客户端请求的信息，对应类型：javax.servlet.http.HttpServletRequest&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;response&lt;/code&gt;:负责向客户端发出响应，对应类型：javax.servlet.http.HttpServletResponse&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;session&lt;/code&gt;:负责保存同一客户端一次会话过程中的一些信息，对应类型：javax.servlet.http.httpsession&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;out&lt;/code&gt;: 负责管理对客户端的输出，对应类型：javax.serlvet.jsp.jspwriter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;application&lt;/code&gt;:表示整个应用环境的信息，对应类型：javax.servlet.servletcontext&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;config&lt;/code&gt;:表示ServletConfig，对应类型：javax.servlet.servletconfig&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;exception&lt;/code&gt;:表示页面中发生的异常，可以通过它获得页面异常信息，对应类型：java.lang.exception&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;pagecontext&lt;/code&gt;:表示这个JSP页面上下文，对应类型：javax.servlet.jsp.pagecontext&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;page&lt;/code&gt;:表示当前JSP页面本身。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>面试总结之Java Web篇(持续更新)</title>
    <link href="http://kunxiang.wang/2018/09/27/%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93%E4%B9%8BJava-Web%E7%AF%87-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/"/>
    <id>http://kunxiang.wang/2018/09/27/面试总结之Java-Web篇-持续更新/</id>
    <published>2018-09-27T13:16:53.000Z</published>
    <updated>2018-09-28T02:51:37.101Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="面试" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="Java Web" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/Java-Web/"/>
    
    
      <category term="面试" scheme="http://kunxiang.wang/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="Java Web" scheme="http://kunxiang.wang/tags/Java-Web/"/>
    
  </entry>
  
  <entry>
    <title>数据库范式</title>
    <link href="http://kunxiang.wang/2018/09/26/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%8C%83%E5%BC%8F/"/>
    <id>http://kunxiang.wang/2018/09/26/数据库范式/</id>
    <published>2018-09-26T14:44:54.000Z</published>
    <updated>2018-09-26T14:54:27.101Z</updated>
    
    <content type="html"><![CDATA[<h4 id="第一范式（1NF）"><a href="#第一范式（1NF）" class="headerlink" title="第一范式（1NF）"></a>第一范式（1NF）</h4><p><code>所谓第一范式（1NF）是指在关系模型中，对域添加的一个规范要求，所有的域都应该是原子性的，即数据库表的每一列都是不可分割的原子数据项</code>，而不能是集合，数组，记录等非原子数据项。即实体中的某个属性有多个值时，必须拆分为不同的属性。在符合第一范式（1NF）表中的每个域值只能是实体的一个属性或一个属性的一部分。<code>简而言之，第一范式就是无重复的域。</code><br>说明：在任何一个关系数据库中，第一范式（1NF）是对关系模式的设计基本要求，一般设计中都必须满足第一范式（1NF）。不过有些关系模型中突破了1NF的限制，这种称为非1NF的关系模型。换句话说，是否必须满足1NF的最低要求，主要依赖于所使用的关系模型。</p><a id="more"></a><h4 id="第二范式（2NF）"><a href="#第二范式（2NF）" class="headerlink" title="第二范式（2NF）"></a>第二范式（2NF）</h4><p>在1NF的基础上，非码属性必须完全依赖于候选码（在1NF基础上消除非主属性对主码的部分函数依赖）<br>第二范式（2NF）是在第一范式（1NF）的基础上建立起来的，即满足第二范式（2NF）必须先满足第一范式（1NF）。<code>第二范式（2NF）要求数据库表中的每个实例或记录必须可以被唯一地区分</code>。选取一个能区分每个实体的属性或属性组，作为实体的唯一标识。例如在员工表中的身份证号码即可实现每个一员工的区分，该身份证号码即为候选键，任何一个候选键都可以被选作主键。在找不到候选键时，可额外增加属性以实现区分，如果在员工关系中，没有对其身份证号进行存储，而姓名可能会在数据库运行的某个时间重复，无法区分出实体时，设计辟如ID等不重复的编号以实现区分，被添加的编号或ID选作主键。（该主键的添加是在ER设计时添加，不是建库时随意添加）<br><code>第二范式（2NF）要求实体的属性完全依赖于主关键字。所谓完全依赖是指不能存在仅依赖主关键字一部分的属性</code>，如果存在，那么这个属性和主关键字的这一部分应该分离出来形成一个新的实体，新实体与原实体之间是一对多的关系。为实现区分通常需要为表加上一个列，以存储各个实例的唯一标识。<code>简而言之，第二范式就是在第一范式的基础上属性完全依赖于主键。</code></p><h4 id="第三范式（3NF）"><a href="#第三范式（3NF）" class="headerlink" title="第三范式（3NF）"></a>第三范式（3NF）</h4><p>在2NF基础上，任何非主属性不依赖于其它非主属性（在2NF基础上消除传递依赖）<br>第三范式（3NF）是第二范式（2NF）的一个子集，即满足第三范式（3NF）必须满足第二范式（2NF）。<code>简而言之，第三范式（3NF）要求一个关系中不包含已在其它关系已包含的非主关键字信息。可以理解为消除冗余。</code>例如，存在一个部门信息表，其中每个部门有部门编号（dept_id）、部门名称、部门简介等信息。那么在员工信息表中列出部门编号后就不能再将部门名称、部门简介等与部门有关的信息再加入员工信息表中。如果不存在部门信息表，则根据第三范式（3NF）也应该构建它，否则就会有大量的数据冗余。简而言之，第三范式就是属性不依赖于其它非主属性，也就是在满足2NF的基础上，任何非主属性不得传递依赖于主属性。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;第一范式（1NF）&quot;&gt;&lt;a href=&quot;#第一范式（1NF）&quot; class=&quot;headerlink&quot; title=&quot;第一范式（1NF）&quot;&gt;&lt;/a&gt;第一范式（1NF）&lt;/h4&gt;&lt;p&gt;&lt;code&gt;所谓第一范式（1NF）是指在关系模型中，对域添加的一个规范要求，所有的域都应该是原子性的，即数据库表的每一列都是不可分割的原子数据项&lt;/code&gt;，而不能是集合，数组，记录等非原子数据项。即实体中的某个属性有多个值时，必须拆分为不同的属性。在符合第一范式（1NF）表中的每个域值只能是实体的一个属性或一个属性的一部分。&lt;code&gt;简而言之，第一范式就是无重复的域。&lt;/code&gt;&lt;br&gt;说明：在任何一个关系数据库中，第一范式（1NF）是对关系模式的设计基本要求，一般设计中都必须满足第一范式（1NF）。不过有些关系模型中突破了1NF的限制，这种称为非1NF的关系模型。换句话说，是否必须满足1NF的最低要求，主要依赖于所使用的关系模型。&lt;/p&gt;
    
    </summary>
    
      <category term="面试" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="数据库" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="面试" scheme="http://kunxiang.wang/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="数据库" scheme="http://kunxiang.wang/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>数据库事务的四个特性及四个隔离级别</title>
    <link href="http://kunxiang.wang/2018/09/26/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%9B%9B%E4%B8%AA%E7%89%B9%E6%80%A7%E5%8F%8A%E5%9B%9B%E4%B8%AA%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/"/>
    <id>http://kunxiang.wang/2018/09/26/数据库事务的四个特性及四个隔离级别/</id>
    <published>2018-09-26T13:52:11.000Z</published>
    <updated>2018-09-26T13:59:40.414Z</updated>
    
    <content type="html"><![CDATA[<h4 id="事务的四大特性（ACID）"><a href="#事务的四大特性（ACID）" class="headerlink" title="事务的四大特性（ACID）"></a>事务的四大特性（ACID）</h4><ol><li>原子性（atomicity）：一个事务必须视为一个不可分割的最小工作单元，整个事务中的所有操作要么全部提交成功，要么全部失败回滚，对于一个事务来说，不可能只执行其中的一部分操作，这就是事务的原子性。</li><li>一致性（consistency）：数据库总数从一个一致性的状态转换到另一个一致性的状态。</li><li>隔离性（isolation）：一个事务所做的修改在最终提交以前，对其他事务是不可见的。</li><li>持久性（durability）：一旦事务提交，则其所做的修改就会永久保存到数据库中。此时即使系统崩溃，修改的数据也不会丢失。</li></ol><h4 id="四个隔离级别"><a href="#四个隔离级别" class="headerlink" title="四个隔离级别"></a>四个隔离级别</h4><p>数据库事务的隔离级别有4种，由低到高分别为<code>Read uncommitted</code> 、<code>Read committed</code> 、<code>Repeatable read</code> 、<code>Serializable</code> 。而且，在事务的并发操作中可能会出现<strong>脏读</strong>,<strong>不可重复读</strong>，<strong>幻读</strong>。下面通过事例一一阐述它们的概念与联系。</p><a id="more"></a><h5 id="Read-uncommitted"><a href="#Read-uncommitted" class="headerlink" title="Read uncommitted"></a>Read uncommitted</h5><p>读未提交，顾名思义，就是一个事务可以读取另一个未提交事务的数据。<br><code>事例</code>：老板要给程序员发工资，程序员的工资是3.6万/月。但是发工资时老板不小心按错了数字，按成3.9万/月，该钱已经打到程序员的户口，但是事务还没有提交，就在这时，程序员去查看自己这个月的工资，发现比往常多了3千元，以为涨工资了非常高兴。但是老板及时发现了不对，马上回滚差点就提交了的事务，将数字改成3.6万再提交。<br><code>分析</code>：实际程序员这个月的工资还是3.6万，但是程序员看到的是3.9万。他看到的是老板还没提交事务时的数据。这就是脏读。<br>那怎么解决脏读呢？<code>Read committed！读提交，能解决脏读问题</code>。</p><h6 id="Read-committed"><a href="#Read-committed" class="headerlink" title="Read committed"></a>Read committed</h6><p>读提交，顾名思义，就是一个事务要等另一个事务提交后才能读取数据。<br><code>事例</code>：程序员拿着信用卡去享受生活（卡里当然是只有3.6万），当他埋单时（程序员事务开启），收费系统事先检测到他的卡里有3.6万，就在这个时候！！程序员的妻子要把钱全部转出充当家用，并提交。当收费系统准备扣款时，再检测卡里的金额，发现已经没钱了（第二次检测金额当然要等待妻子转出金额事务提交完）。程序员就会很郁闷，明明卡里是有钱的…<br><code>分析</code>：这就是读提交，若有事务对数据进行更新（UPDATE）操作时，读操作事务要等待这个更新操作事务提交后才能读取数据，可以解决脏读问题。但在这个事例中，出现了一个事务范围内两个相同的查询却返回了不同数据，这就是不可重复读。<br><code>那怎么解决不可重复读问题？Repeatable read ！</code></p><h5 id="Repeatable-read"><a href="#Repeatable-read" class="headerlink" title="Repeatable read"></a>Repeatable read</h5><p>重复读，就是在开始读取数据（事务开启）时，不再允许修改操作<br><code>事例</code>：程序员拿着信用卡去享受生活（卡里当然是只有3.6万），当他埋单时（事务开启，不允许其他事务的UPDATE修改操作），收费系统事先检测到他的卡里有3.6万。这个时候他的妻子不能转出金额了。接下来收费系统就可以扣款了。<br><code>分析</code>：重复读可以解决不可重复读问题。写到这里，应该明白的一点就是，<code>不可重复读对应的是修改，即UPDATE操作</code>。<code>但是可能还会有幻读问题。因为**幻读问题对应的是插入INSERT操作**，而不是UPDATE操作。</code></p><p>什么时候会出现幻读？<br><code>事例</code>：程序员某一天去消费，花了2千元，然后他的妻子去查看他今天的消费记录（全表扫描FTS，妻子事务开启），看到确实是花了2千元，就在这个时候，程序员花了1万买了一部电脑，即<code>新增INSERT</code>了一条消费记录，并提交。当妻子打印程序员的消费记录清单时（妻子事务提交），发现花了1.2万元，似乎出现了幻觉，这就是幻读。<br>那怎么解决幻读问题？Serializable！</p><h5 id="Serializable-序列化"><a href="#Serializable-序列化" class="headerlink" title="Serializable 序列化"></a>Serializable 序列化</h5><p>Serializable 是最高的事务隔离级别，在该级别下，事务串行化顺序执行，可以避免脏读、不可重复读与幻读。但是这种事务隔离级别效率低下，比较耗数据库性能，一般不使用。<br>值得一提的是：大多数数据库默认的事务隔离级别是Read committed，比如Sql Server ,<br>Oracle。MySQL的默认隔离级别是Repeatable read。</p><hr><p>本文来自 csdnxingyuntian 的CSDN 博客 ，全文地址请点击：<a href="https://blog.csdn.net/csdnxingyuntian/article/details/57081233?utm_source=copy" target="_blank" rel="noopener">https://blog.csdn.net/csdnxingyuntian/article/details/57081233?utm_source=copy</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;事务的四大特性（ACID）&quot;&gt;&lt;a href=&quot;#事务的四大特性（ACID）&quot; class=&quot;headerlink&quot; title=&quot;事务的四大特性（ACID）&quot;&gt;&lt;/a&gt;事务的四大特性（ACID）&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;原子性（atomicity）：一个事务必须视为一个不可分割的最小工作单元，整个事务中的所有操作要么全部提交成功，要么全部失败回滚，对于一个事务来说，不可能只执行其中的一部分操作，这就是事务的原子性。&lt;/li&gt;
&lt;li&gt;一致性（consistency）：数据库总数从一个一致性的状态转换到另一个一致性的状态。&lt;/li&gt;
&lt;li&gt;隔离性（isolation）：一个事务所做的修改在最终提交以前，对其他事务是不可见的。&lt;/li&gt;
&lt;li&gt;持久性（durability）：一旦事务提交，则其所做的修改就会永久保存到数据库中。此时即使系统崩溃，修改的数据也不会丢失。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;四个隔离级别&quot;&gt;&lt;a href=&quot;#四个隔离级别&quot; class=&quot;headerlink&quot; title=&quot;四个隔离级别&quot;&gt;&lt;/a&gt;四个隔离级别&lt;/h4&gt;&lt;p&gt;数据库事务的隔离级别有4种，由低到高分别为&lt;code&gt;Read uncommitted&lt;/code&gt; 、&lt;code&gt;Read committed&lt;/code&gt; 、&lt;code&gt;Repeatable read&lt;/code&gt; 、&lt;code&gt;Serializable&lt;/code&gt; 。而且，在事务的并发操作中可能会出现&lt;strong&gt;脏读&lt;/strong&gt;,&lt;strong&gt;不可重复读&lt;/strong&gt;，&lt;strong&gt;幻读&lt;/strong&gt;。下面通过事例一一阐述它们的概念与联系。&lt;/p&gt;
    
    </summary>
    
      <category term="面试" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="数据库" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="面试" scheme="http://kunxiang.wang/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="数据库" scheme="http://kunxiang.wang/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL函数、索引和视图操作Demo</title>
    <link href="http://kunxiang.wang/2018/09/26/PostgreSQL%E5%87%BD%E6%95%B0%E3%80%81%E7%B4%A2%E5%BC%95%E5%92%8C%E8%A7%86%E5%9B%BE%E6%93%8D%E4%BD%9CDemo/"/>
    <id>http://kunxiang.wang/2018/09/26/PostgreSQL函数、索引和视图操作Demo/</id>
    <published>2018-09-26T08:32:31.000Z</published>
    <updated>2018-09-26T08:54:31.185Z</updated>
    
    <content type="html"><![CDATA[<h4 id="创建演示数据表结构"><a href="#创建演示数据表结构" class="headerlink" title="创建演示数据表结构"></a>创建演示数据表结构</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建dept表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept (</span><br><span class="line">    d_no <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,     <span class="comment">--部门编号</span></span><br><span class="line">d_name <span class="built_in">VARCHAR</span>(<span class="number">30</span>),       <span class="comment">--部门名称</span></span><br><span class="line">d_location <span class="built_in">VARCHAR</span>(<span class="number">300</span>)   <span class="comment">--部门所在地址</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--dept表初始化数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">10</span>, <span class="string">'开发部'</span>, <span class="string">'北京市海淀区'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">20</span>, <span class="string">'测试部'</span>, <span class="string">'北京市东城区'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">30</span>, <span class="string">'销售部'</span>, <span class="string">'上海市'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">40</span>, <span class="string">'财务部'</span>, <span class="string">'广州市'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">50</span>, <span class="string">'运维部'</span>, <span class="string">'武汉市'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">60</span>, <span class="string">'集成部'</span>, <span class="string">'南京市'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建employee表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employee (</span><br><span class="line">    e_no <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,             <span class="comment">--雇员编号</span></span><br><span class="line">e_name <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,      <span class="comment">--雇员名称</span></span><br><span class="line">e_gender <span class="built_in">CHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,        <span class="comment">--性别，f：女，m：男</span></span><br><span class="line">dept_no <span class="built_in">INT</span>,                      <span class="comment">--所在部门编号</span></span><br><span class="line">e_job <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,       <span class="comment">--职位</span></span><br><span class="line">e_salary <span class="built_in">NUMERIC</span>(<span class="number">9</span>, <span class="number">2</span>),           <span class="comment">--工资</span></span><br><span class="line">e_hireDate <span class="built_in">DATE</span>,                  <span class="comment">--入职日期</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_emp_deptno FOREIGN <span class="keyword">KEY</span> (dept_no) <span class="keyword">REFERENCES</span> dept(d_no)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--初始化employee表</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">100</span>, <span class="string">'赵志军'</span>, <span class="string">'f'</span>, <span class="number">10</span>, <span class="string">'开发工程师'</span>, <span class="number">5000</span>, <span class="string">'2010-01-01'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">101</span>, <span class="string">'张铭雨'</span>, <span class="string">'f'</span>, <span class="number">10</span>, <span class="string">'开发工程师'</span>, <span class="number">6000</span>, <span class="string">'2012-04-04'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">102</span>, <span class="string">'许锋'</span>, <span class="string">'f'</span>, <span class="number">10</span>, <span class="string">'开发经理'</span>, <span class="number">8000</span>, <span class="string">'2008-01-01'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">103</span>, <span class="string">'王嘉琦'</span>, <span class="string">'m'</span>, <span class="number">20</span>, <span class="string">'测试工程师'</span>, <span class="number">4500</span>, <span class="string">'2013-08-12'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">104</span>, <span class="string">'李江新'</span>, <span class="string">'f'</span>, <span class="number">20</span>, <span class="string">'测试工程师'</span>, <span class="number">5000</span>, <span class="string">'2011-08-16'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">105</span>, <span class="string">'张海影'</span>, <span class="string">'m'</span>, <span class="number">20</span>, <span class="string">'测试经理'</span>, <span class="number">6000</span>, <span class="string">'2009-11-12'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">106</span>, <span class="string">'马恩波'</span>, <span class="string">'f'</span>, <span class="number">30</span>, <span class="string">'销售人员'</span>, <span class="number">3000</span>, <span class="string">'2014-09-01'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">107</span>, <span class="string">'李慧敏'</span>, <span class="string">'m'</span>, <span class="number">30</span>, <span class="string">'销售人员'</span>, <span class="number">5000</span>, <span class="string">'2010-08-14'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">108</span>, <span class="string">'马爽爽'</span>, <span class="string">'m'</span>, <span class="number">30</span>, <span class="string">'销售经理'</span>, <span class="number">9000</span>, <span class="string">'2006-12-02'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">109</span>, <span class="string">'史晓云'</span>, <span class="string">'m'</span>, <span class="number">30</span>, <span class="string">'销售高级经理'</span>, <span class="number">12000</span>, <span class="string">'2003-07-14'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">110</span>, <span class="string">'刘燕凤'</span>, <span class="string">'m'</span>, <span class="number">40</span>, <span class="string">'财务人员'</span>, <span class="number">3000</span>, <span class="string">'2011-06-01'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">111</span>, <span class="string">'王科'</span>, <span class="string">'f'</span>, <span class="number">40</span>, <span class="string">'财务人员'</span>, <span class="number">3500</span>, <span class="string">'2010-05-01'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">112</span>, <span class="string">'李林英'</span>, <span class="string">'m'</span>, <span class="number">40</span>, <span class="string">'财务经理'</span>, <span class="number">5000</span>, <span class="string">'2008-05-07'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">113</span>, <span class="string">'李杨'</span>, <span class="string">'f'</span>, <span class="number">10</span>, <span class="string">'实习工程师'</span>, <span class="literal">NULL</span>, <span class="string">'2015-05-07'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">114</span>, <span class="string">'李刚'</span>, <span class="string">'f'</span>, <span class="literal">NULL</span>, <span class="string">'实习工程师'</span>, <span class="literal">NULL</span>, <span class="string">'2015-05-07'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">115</span>, <span class="string">'王林'</span>, <span class="string">'f'</span>, <span class="literal">NULL</span>, <span class="string">'实习工程师'</span>, <span class="literal">NULL</span>, <span class="string">'2015-05-07'</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="函数使用：数值函数"><a href="#函数使用：数值函数" class="headerlink" title="函数使用：数值函数"></a>函数使用：数值函数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--AVG函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(e_salary) <span class="keyword">FROM</span> employee;</span><br><span class="line"><span class="comment">--COUNT函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> employee;</span><br><span class="line"><span class="comment">--MAX函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(e_salary) <span class="keyword">FROM</span> employee;</span><br><span class="line"><span class="comment">--MIN函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(e_salary) <span class="keyword">FROM</span> employee;</span><br><span class="line"><span class="comment">--SUM函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(e_salary) <span class="keyword">FROM</span> employee;</span><br></pre></td></tr></table></figure><h4 id="函数使用：字符串函数"><a href="#函数使用：字符串函数" class="headerlink" title="函数使用：字符串函数"></a>函数使用：字符串函数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--LENGTH函数</span></span><br><span class="line"><span class="keyword">SELECT</span> e_name, <span class="keyword">LENGTH</span>(e_name) <span class="keyword">FROM</span> employee;</span><br><span class="line"><span class="comment">--CONCAT函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(e_no, <span class="string">'|'</span>, e_name, <span class="string">'|'</span>, e_salary) <span class="keyword">FROM</span> employee;</span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_hireDate, <span class="keyword">CONCAT</span>(e_no, e_name, e_hireDate) <span class="keyword">FROM</span> employee;</span><br><span class="line"><span class="comment">--TRIM函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(<span class="string">'         '</span>, e_name), <span class="keyword">TRIM</span>(<span class="keyword">CONCAT</span>(<span class="string">'         '</span>, e_name)) <span class="keyword">FROM</span> employee;</span><br><span class="line"><span class="comment">--REPLACE函数</span></span><br><span class="line"><span class="keyword">SELECT</span> e_name, <span class="keyword">REPLACE</span>(e_name, <span class="string">'李'</span>, <span class="string">'张'</span>) <span class="keyword">FROM</span> employee;</span><br><span class="line"><span class="comment">--SUBSTRING函数</span></span><br><span class="line"><span class="keyword">SELECT</span> e_name, <span class="keyword">SUBSTRING</span>(e_name, <span class="number">2</span>, <span class="number">3</span>) <span class="keyword">FROM</span> employee;</span><br></pre></td></tr></table></figure><h4 id="函数使用：日期时间函数"><a href="#函数使用：日期时间函数" class="headerlink" title="函数使用：日期时间函数"></a>函数使用：日期时间函数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--EXTRACT函数</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_hireDate, <span class="keyword">EXTRACT</span>(<span class="keyword">YEAR</span> <span class="keyword">FROM</span> e_hireDate), <span class="keyword">EXTRACT</span>(<span class="keyword">MONTH</span> <span class="keyword">FROM</span> e_hireDate), <span class="keyword">EXTRACT</span>(<span class="keyword">DAY</span> <span class="keyword">FROM</span> e_hireDate) <span class="keyword">FROM</span> employee;</span><br><span class="line"><span class="comment">--CURRENT_DATE、CURRENT_TIME、NOW函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURRENT_DATE</span>, <span class="keyword">CURRENT_TIME</span>, <span class="keyword">now</span>();</span><br></pre></td></tr></table></figure><h4 id="创建函数示例"><a href="#创建函数示例" class="headerlink" title="创建函数示例"></a>创建函数示例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 函数示例</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> <span class="keyword">add</span>(<span class="built_in">INTEGER</span>, <span class="built_in">INTEGER</span>) <span class="keyword">RETURNS</span> <span class="built_in">INTEGER</span>          </span><br><span class="line">    <span class="keyword">AS</span> <span class="string">' select $1 + $2; '</span></span><br><span class="line"><span class="keyword">LANGUAGE</span> <span class="keyword">SQL</span></span><br><span class="line"><span class="keyword">RETURNS</span> <span class="literal">NULL</span> <span class="keyword">ON</span> <span class="literal">NULL</span> <span class="keyword">INPUT</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--应用</span></span><br><span class="line"><span class="comment">--创建函数</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> CONCAT_TEST(<span class="built_in">INTEGER</span>, <span class="built_in">VARCHAR</span>, <span class="built_in">DATE</span>) <span class="keyword">RETURNS</span> <span class="built_in">VARCHAR</span></span><br><span class="line">    <span class="keyword">AS</span> <span class="string">'SELECT $1||$2||$3;'</span></span><br><span class="line">    <span class="keyword">LANGUAGE</span> <span class="keyword">SQL</span></span><br><span class="line"><span class="keyword">RETURNS</span> <span class="literal">NULL</span> <span class="keyword">ON</span> <span class="literal">NULL</span> <span class="keyword">INPUT</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--函数调用</span></span><br><span class="line"><span class="keyword">select</span> e_no, e_name, e_hireDate, CONCAT_TEST(e_no, e_name, e_hireDate) <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="comment">--删除函数</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">FUNCTION</span> CONCAT_TEST(<span class="built_in">INTEGER</span>, <span class="built_in">VARCHAR</span>, <span class="built_in">DATE</span>);</span><br></pre></td></tr></table></figure><h4 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建索引</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> emp_name_index <span class="keyword">ON</span> employee (e_name);</span><br><span class="line"><span class="comment">--删除索引</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> emp_name_index;</span><br></pre></td></tr></table></figure><h4 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建视图</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> V_EMP_DEV <span class="keyword">AS</span></span><br><span class="line">  <span class="keyword">SELECT</span> e_no, e_name, e_salary, e_hireDate</span><br><span class="line">  <span class="keyword">FROM</span> employee</span><br><span class="line">  <span class="keyword">WHERE</span> dept_no = <span class="number">10</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> e_salary <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--视图调用</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> V_EMP_DEV;</span><br><span class="line"><span class="comment">--删除视图</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> V_EMP_DEV;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;创建演示数据表结构&quot;&gt;&lt;a href=&quot;#创建演示数据表结构&quot; class=&quot;headerlink&quot; title=&quot;创建演示数据表结构&quot;&gt;&lt;/a&gt;创建演示数据表结构&lt;/h4&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--创建dept表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; dept (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    d_no &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt;,     &lt;span class=&quot;comment&quot;&gt;--部门编号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	d_name &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;),       &lt;span class=&quot;comment&quot;&gt;--部门名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	d_location &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;)   &lt;span class=&quot;comment&quot;&gt;--部门所在地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--dept表初始化数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; dept &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;开发部&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;北京市海淀区&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; dept &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;测试部&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;北京市东城区&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; dept &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;销售部&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;上海市&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; dept &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;财务部&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;广州市&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; dept &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;运维部&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;武汉市&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; dept &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;集成部&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;南京市&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--创建employee表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; employee (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e_no &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt;,             &lt;span class=&quot;comment&quot;&gt;--雇员编号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	e_name &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,      &lt;span class=&quot;comment&quot;&gt;--雇员名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	e_gender &lt;span class=&quot;built_in&quot;&gt;CHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,        &lt;span class=&quot;comment&quot;&gt;--性别，f：女，m：男&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	dept_no &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt;,                      &lt;span class=&quot;comment&quot;&gt;--所在部门编号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	e_job &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,       &lt;span class=&quot;comment&quot;&gt;--职位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	e_salary &lt;span class=&quot;built_in&quot;&gt;NUMERIC&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;),           &lt;span class=&quot;comment&quot;&gt;--工资&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	e_hireDate &lt;span class=&quot;built_in&quot;&gt;DATE&lt;/span&gt;,                  &lt;span class=&quot;comment&quot;&gt;--入职日期&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;CONSTRAINT&lt;/span&gt; fk_emp_deptno FOREIGN &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (dept_no) &lt;span class=&quot;keyword&quot;&gt;REFERENCES&lt;/span&gt; dept(d_no)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--初始化employee表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;赵志军&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;开发工程师&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2010-01-01&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;101&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;张铭雨&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;开发工程师&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6000&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2012-04-04&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;102&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;许锋&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;开发经理&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8000&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2008-01-01&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;103&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;王嘉琦&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;测试工程师&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4500&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2013-08-12&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;104&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;李江新&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;测试工程师&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2011-08-16&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;105&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;张海影&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;测试经理&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6000&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2009-11-12&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;106&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;马恩波&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;销售人员&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2014-09-01&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;李慧敏&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;销售人员&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2010-08-14&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;108&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;马爽爽&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;销售经理&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9000&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2006-12-02&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;109&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;史晓云&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;销售高级经理&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12000&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2003-07-14&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;110&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;刘燕凤&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;财务人员&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2011-06-01&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;王科&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;财务人员&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3500&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2010-05-01&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;112&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;李林英&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;财务经理&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2008-05-07&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;113&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;李杨&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;实习工程师&#39;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2015-05-07&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;114&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;李刚&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;实习工程师&#39;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2015-05-07&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;115&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;王林&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;实习工程师&#39;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2015-05-07&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="面试" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="数据库" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="面试" scheme="http://kunxiang.wang/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="数据库" scheme="http://kunxiang.wang/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL数据操作和数据表约束Demo</title>
    <link href="http://kunxiang.wang/2018/09/26/PostgreSQL%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E5%92%8C%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%BA%A6%E6%9D%9FDemo/"/>
    <id>http://kunxiang.wang/2018/09/26/PostgreSQL数据操作和数据表约束Demo/</id>
    <published>2018-09-26T05:57:21.000Z</published>
    <updated>2018-09-26T08:45:02.087Z</updated>
    
    <content type="html"><![CDATA[<h4 id="插入数据-INSERT"><a href="#插入数据-INSERT" class="headerlink" title="插入数据 INSERT"></a>插入数据 INSERT</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建student数据表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student (</span><br><span class="line">   <span class="keyword">id</span> <span class="built_in">INT</span>,                   <span class="comment">--学生编号</span></span><br><span class="line">   <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>),         <span class="comment">--学生姓名</span></span><br><span class="line">   birthday <span class="built_in">DATE</span>,            <span class="comment">--出生日期</span></span><br><span class="line">   score <span class="built_in">NUMERIC</span>(<span class="number">5</span>, <span class="number">2</span>)       <span class="comment">--学分</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--向表中所有字段插入数据（顺序不能乱）</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'张三'</span>, <span class="string">'1990-01-01'</span>, <span class="number">3.85</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--向表中指定字段插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(<span class="keyword">id</span>, <span class="keyword">name</span>, birthday) <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">'李四'</span>, <span class="string">'1990-01-02'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--向表中指定字段插入数据（打乱字段顺序）</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(<span class="keyword">id</span>, birthday, <span class="keyword">name</span>) <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">'1988-05-01'</span>, <span class="string">'王五'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--使用INSERT语句批量插入多条数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(<span class="keyword">id</span>, <span class="keyword">name</span>, birthday) <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">'张三1'</span>, <span class="string">'1990-02-01'</span>), (<span class="number">5</span>, <span class="string">'张三2'</span>, <span class="string">'1990-02-02'</span>), (<span class="number">6</span>, <span class="string">'张三3'</span>, <span class="string">'1990-02-03'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建student1数据表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student_new (</span><br><span class="line">   <span class="keyword">id</span> <span class="built_in">INT</span>,                   <span class="comment">--学生编号</span></span><br><span class="line">   <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>),         <span class="comment">--学生姓名</span></span><br><span class="line">   birthday <span class="built_in">DATE</span>,            <span class="comment">--出生日期</span></span><br><span class="line">   score <span class="built_in">NUMERIC</span>(<span class="number">5</span>, <span class="number">2</span>)       <span class="comment">--学分</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--将查询结果插入到表中</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student_new <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">--将查询结果插入到表中</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student_new(<span class="keyword">id</span>, <span class="keyword">name</span>, birthday) <span class="keyword">SELECT</span> <span class="keyword">id</span>, <span class="keyword">name</span>, birthday <span class="keyword">FROM</span> student;</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="更新数据-update"><a href="#更新数据-update" class="headerlink" title="更新数据 update"></a>更新数据 update</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--指定条件更新数据</span></span><br><span class="line"><span class="keyword">update</span> student <span class="keyword">set</span> <span class="keyword">name</span> = <span class="string">'李四1'</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--批量更新数据</span></span><br><span class="line"><span class="keyword">UPDATE</span> student <span class="keyword">SET</span> score = <span class="number">3.76</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--将指定结果更新到对应字段</span></span><br><span class="line"><span class="keyword">update</span> student <span class="keyword">set</span> score = <span class="number">1.1</span>+<span class="number">2.3</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h4 id="删除数据-DELETE-TRUNCATE"><a href="#删除数据-DELETE-TRUNCATE" class="headerlink" title="删除数据 DELETE TRUNCATE"></a>删除数据 DELETE TRUNCATE</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--删除数据</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> birthday <span class="keyword">BETWEEN</span> <span class="string">'1988-01-01'</span> <span class="keyword">AND</span> <span class="string">'1989-12-31'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--TRUNCATE清空数据</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> student_new;</span><br></pre></td></tr></table></figure><h4 id="主键约束-PRIMARY-KEY"><a href="#主键约束-PRIMARY-KEY" class="headerlink" title="主键约束 PRIMARY KEY"></a>主键约束 PRIMARY KEY</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建emp表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">   <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,       <span class="comment">--编号</span></span><br><span class="line">   <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>),         <span class="comment">--姓名</span></span><br><span class="line">   salary <span class="built_in">NUMERIC</span>(<span class="number">9</span>, <span class="number">2</span>)      <span class="comment">--工资</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'张三'</span>, <span class="number">3000.00</span>);</span><br><span class="line"><span class="comment">--INSERT INTO emp VALUES (1, '李四', 3000.00); --插入提示错误，主键冲突</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建emp1表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp1 (</span><br><span class="line">   <span class="keyword">id</span> <span class="built_in">INT</span>,                   <span class="comment">--编号</span></span><br><span class="line">   <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>),         <span class="comment">--姓名</span></span><br><span class="line">   salary <span class="built_in">NUMERIC</span>(<span class="number">9</span>, <span class="number">2</span>),     <span class="comment">--工资</span></span><br><span class="line">   <span class="keyword">CONSTRAINT</span> pk_emp1 PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建emp2表（联合主键）</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp2 (</span><br><span class="line">   <span class="keyword">id</span> <span class="built_in">INT</span>,                   <span class="comment">--编号</span></span><br><span class="line">   <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>),         <span class="comment">--姓名</span></span><br><span class="line">   salary <span class="built_in">NUMERIC</span>(<span class="number">9</span>, <span class="number">2</span>),     <span class="comment">--工资</span></span><br><span class="line">   <span class="keyword">CONSTRAINT</span> pk_emp2 PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>, <span class="keyword">name</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="外键约束-FOREIGN-KEY-field-REFERENCES"><a href="#外键约束-FOREIGN-KEY-field-REFERENCES" class="headerlink" title="外键约束 FOREIGN KEY(field) REFERENCES"></a>外键约束 FOREIGN KEY(field) REFERENCES</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建dept表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept (</span><br><span class="line">   <span class="keyword">id</span> <span class="built_in">INT</span>,                   <span class="comment">--编号</span></span><br><span class="line">   <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>),         <span class="comment">--部门名称</span></span><br><span class="line">   <span class="keyword">CONSTRAINT</span> pk_dept PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">'开发部'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span>(<span class="number">2</span>, <span class="string">'测试部'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建emp表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp3 (</span><br><span class="line">   <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,       <span class="comment">--编号</span></span><br><span class="line">   <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>),         <span class="comment">--姓名</span></span><br><span class="line">   salary <span class="built_in">NUMERIC</span>(<span class="number">9</span>, <span class="number">2</span>),     <span class="comment">--工资</span></span><br><span class="line">   deptId <span class="built_in">INT</span>,</span><br><span class="line">   <span class="keyword">CONSTRAINT</span> fk_emp3_dept FOREIGN <span class="keyword">KEY</span>(deptId) <span class="keyword">REFERENCES</span> dept(<span class="keyword">id</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp3 <span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">'张三'</span>, <span class="number">3000.00</span>, <span class="number">1</span>);</span><br><span class="line"><span class="comment">--INSERT INTO emp3 VALUES(2, '李四', 3000.00, 3); --插入数据报错，外键关联数据不存在</span></span><br><span class="line"><span class="comment">--DELETE FROM dept WHERE id = 1; --删除数据报错，存在外键关联数据</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> dept <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>; <span class="comment">--不存在外键关联数据，可以正常删除数据</span></span><br></pre></td></tr></table></figure><h4 id="删除表-DROP"><a href="#删除表-DROP" class="headerlink" title="删除表 DROP"></a>删除表 DROP</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--DROP TABLE dept; --直接删除dept表会报错，与emp3表存在关联</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> dept <span class="keyword">CASCADE</span>; <span class="comment">--强制递归删除数据</span></span><br></pre></td></tr></table></figure><h4 id="创建非空约束-NOT-NULL"><a href="#创建非空约束-NOT-NULL" class="headerlink" title="创建非空约束 NOT NULL"></a>创建非空约束 NOT NULL</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建非空约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp4 (</span><br><span class="line">   <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,           <span class="comment">--编号</span></span><br><span class="line">   <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,    <span class="comment">--姓名</span></span><br><span class="line">   salary <span class="built_in">NUMERIC</span>(<span class="number">9</span>, <span class="number">2</span>)         <span class="comment">--工资</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp4 <span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">'张三'</span>, <span class="number">3000.00</span>);</span><br><span class="line"><span class="comment">--INSERT INTO emp4 VALUES(2, NULL, 3000.00); --插入数据报错，违法非空约束</span></span><br></pre></td></tr></table></figure><h4 id="创建唯一约束-UNIQUE"><a href="#创建唯一约束-UNIQUE" class="headerlink" title="创建唯一约束 UNIQUE"></a>创建唯一约束 UNIQUE</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建唯一约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp5 (</span><br><span class="line">   <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,          <span class="comment">--编号</span></span><br><span class="line">   <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>),            <span class="comment">--姓名</span></span><br><span class="line">   phone <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">UNIQUE</span>,    <span class="comment">--电话号码</span></span><br><span class="line">   salary <span class="built_in">NUMERIC</span>(<span class="number">9</span>, <span class="number">2</span>)         <span class="comment">--工资</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp5 <span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">'张三'</span>, <span class="string">'13436652541'</span>, <span class="number">3000.00</span>);</span><br><span class="line"><span class="comment">--INSERT INTO emp5 VALUES(2, '李四', '13436652541', 3000.00); --插入数据报错，违法唯一约束</span></span><br></pre></td></tr></table></figure><h4 id="创建默认值约束-default"><a href="#创建默认值约束-default" class="headerlink" title="创建默认值约束 default"></a>创建默认值约束 default</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建默认值约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp6 (</span><br><span class="line">   <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,               <span class="comment">--编号</span></span><br><span class="line">   <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>),                 <span class="comment">--姓名</span></span><br><span class="line">   salary <span class="built_in">NUMERIC</span>(<span class="number">9</span>, <span class="number">2</span>) <span class="keyword">default</span> <span class="number">0.0</span>  <span class="comment">--工资</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp6 (<span class="keyword">id</span>, <span class="keyword">name</span>) <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">'张三'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp6 (<span class="keyword">id</span>, <span class="keyword">name</span>, salary) <span class="keyword">values</span> (<span class="number">2</span>,<span class="string">'李四'</span>, <span class="number">3000</span>);</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;插入数据-INSERT&quot;&gt;&lt;a href=&quot;#插入数据-INSERT&quot; class=&quot;headerlink&quot; title=&quot;插入数据 INSERT&quot;&gt;&lt;/a&gt;插入数据 INSERT&lt;/h4&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--创建student数据表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; student (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt;,                   &lt;span class=&quot;comment&quot;&gt;--学生编号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;),         &lt;span class=&quot;comment&quot;&gt;--学生姓名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   birthday &lt;span class=&quot;built_in&quot;&gt;DATE&lt;/span&gt;,            &lt;span class=&quot;comment&quot;&gt;--出生日期&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   score &lt;span class=&quot;built_in&quot;&gt;NUMERIC&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)       &lt;span class=&quot;comment&quot;&gt;--学分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--向表中所有字段插入数据（顺序不能乱）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; student &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;张三&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1990-01-01&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3.85&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--向表中指定字段插入数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; student(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;, birthday) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;李四&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1990-01-02&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--向表中指定字段插入数据（打乱字段顺序）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; student(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;, birthday, &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1988-05-01&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;王五&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--使用INSERT语句批量插入多条数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; student(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;, birthday) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;张三1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1990-02-01&#39;&lt;/span&gt;), (&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;张三2&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1990-02-02&#39;&lt;/span&gt;), (&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;张三3&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1990-02-03&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--创建student1数据表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; student_new (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt;,                   &lt;span class=&quot;comment&quot;&gt;--学生编号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;),         &lt;span class=&quot;comment&quot;&gt;--学生姓名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   birthday &lt;span class=&quot;built_in&quot;&gt;DATE&lt;/span&gt;,            &lt;span class=&quot;comment&quot;&gt;--出生日期&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   score &lt;span class=&quot;built_in&quot;&gt;NUMERIC&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)       &lt;span class=&quot;comment&quot;&gt;--学分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--将查询结果插入到表中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; student_new &lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; student;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--将查询结果插入到表中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; student_new(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;, birthday) &lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;, birthday &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; student;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="面试" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="数据库" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="面试" scheme="http://kunxiang.wang/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="数据库" scheme="http://kunxiang.wang/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>DROP、DELETE和TRUNCATE区别</title>
    <link href="http://kunxiang.wang/2018/09/26/DROP%E3%80%81DELETE%E5%92%8CTRUNCATE%E5%8C%BA%E5%88%AB/"/>
    <id>http://kunxiang.wang/2018/09/26/DROP、DELETE和TRUNCATE区别/</id>
    <published>2018-09-26T05:20:40.000Z</published>
    <updated>2018-09-26T08:32:50.844Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th style="text-align:center">Diffs</th><th style="text-align:center">DELETE</th><th style="text-align:center">TRUNCATE</th><th style="text-align:center">Drop</th></tr></thead><tbody><tr><td style="text-align:center">执行速度</td><td style="text-align:center">慢</td><td style="text-align:center">较快</td><td style="text-align:center">快</td></tr><tr><td style="text-align:center">可执行条件</td><td style="text-align:center">可以</td><td style="text-align:center">不可以</td><td style="text-align:center">不可以</td></tr><tr><td style="text-align:center">语句分类</td><td style="text-align:center">DML</td><td style="text-align:center">DDL</td><td style="text-align:center">DDL</td></tr><tr><td style="text-align:center">可以回滚事务</td><td style="text-align:center">可以</td><td style="text-align:center">不可以</td><td style="text-align:center">不可以</td></tr><tr><td style="text-align:center">删除操作记录日志</td><td style="text-align:center">记录</td><td style="text-align:center">不记录</td><td style="text-align:center">不记录</td></tr></tbody></table><ul><li>drop：drop table 表名<br>删除内容和定义，并释放空间。执行drop语句，将使此表的结构一起删除。</li><li>truncate (清空表中的数据)：truncate table 表名<br>删除内容、释放空间但不删除定义(也就是保留表的数据结构)。与drop不同的是,只是清空表数据而已。<br>truncate不能删除行数据，虽然只删除数据，但是比delete彻底，它只删除表数据。</li><li>delete：delete from 表名 （where 列名 = 值）<br>与truncate类似，delete也只删除内容、释放空间但不删除定义；但是delete即可以对行数据进行删除，也可以对整表数据进行删除。</li></ul><hr><a id="more"></a><h4 id="相同点："><a href="#相同点：" class="headerlink" title="相同点："></a>相同点：</h4><ul><li>truncate 和不带 where 子句的 delete，以及 drop 都会删除表内的数据</li></ul><h4 id="不同点"><a href="#不同点" class="headerlink" title="不同点:"></a>不同点:</h4><ol><li><p><code>truncate 和 delete 只删除数据不删除表的结构(定义)</code><br>drop 语句将删除表的结构被依赖的约束(constrain)、触发器(trigger)、索引(index);依赖于该表的存储过程/函数将保留,但是变为 invalid 状态。</p></li><li><p><code>delete 语句是数据库操作语言(dml)，这操作会放到rollback segement 中，事务提交之后才生效;如果有相应的 trigger，执行的时候将被触发。</code><br><code>truncate、drop 是数据库定义语言(ddl)，操作立即生效，原数据不放到 rollback segment 中，不能回滚，操作不触发 trigger。</code></p></li><li><p>delete 语句不影响表所占用的 extent，高水线(high watermark)保持原位置不动<br>　　显然 drop 语句将表所占用的空间全部释放。<br>　　truncate 语句缺省情况下见空间释放到 minextents个 extent，除非使用reuse storage;truncate 会将高水线复位(回到最开始)。</p></li><li><p>速度，一般来说: drop&gt; truncate &gt; delete</p></li><li><p>安全性：小心使用 drop 和 truncate，尤其没有备份的时候.否则哭都来不及</p></li><li><p>使用上: 想删除部分数据行用 delete，注意带上where子句. 回滚段要足够大.想删除表,当然用 drop;<br><code>想保留表而将所有数据删除，如果和事务无关，用truncate即可。如果和事务有关,或者想触发trigger,还是用delete。</code><br>如果是整理表内部的碎片，可以用truncate跟上reuse stroage，再重新导入/插入数据。</p></li></ol><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Delete</span> <span class="keyword">from</span> Tablename <span class="keyword">where</span> 条件</span><br><span class="line"><span class="keyword">Truncate</span> <span class="keyword">table</span> Tablename</span><br><span class="line"><span class="keyword">Drop</span> <span class="keyword">table</span> Tablename</span><br></pre></td></tr></table></figure><h4 id="Mysql的truncate和delete的区别"><a href="#Mysql的truncate和delete的区别" class="headerlink" title="Mysql的truncate和delete的区别"></a>Mysql的truncate和delete的区别</h4><p>truncate table table_name 和delete from table_name 都是删除表中所有记录。</p><p>区别：</p><p>truncate能够快速清空一个表。并且重置auto_increment的值。而delete只能一行一行的删除。</p><p>但对于不同的类型存储引擎需要注意的地方是：</p><p>A. 对于myisam</p><blockquote><p>truncate会重置auto_increment的值为1。而delete后表仍然保持auto_increment。</p></blockquote><p>B. 对于innodb</p><blockquote><p>truncate会重置auto_increment的值为1。delete后表仍然保持auto_increment。但是在做delete整个表之后重启MySQL的话，则<code>重启后</code>的auto_increment会被置为1。</p></blockquote><p>也就是说，innodb的表本身是无法持久保存auto_increment。delete表之后auto_increment仍然保存在内存，但是重启后就丢失了，只能从1开始。实质上<code>重启</code>后的auto_increment会从 SELECT 1+MAX(ai_col) FROM t 开始。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Diffs&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;DELETE&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;TRUNCATE&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Drop&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;执行速度&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;慢&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;较快&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;快&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;可执行条件&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;可以&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;不可以&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;不可以&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;语句分类&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;DML&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;DDL&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;DDL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;可以回滚事务&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;可以&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;不可以&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;不可以&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;删除操作记录日志&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;记录&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;不记录&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;不记录&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;drop：drop table 表名&lt;br&gt;删除内容和定义，并释放空间。执行drop语句，将使此表的结构一起删除。&lt;/li&gt;
&lt;li&gt;truncate (清空表中的数据)：truncate table 表名&lt;br&gt;删除内容、释放空间但不删除定义(也就是保留表的数据结构)。与drop不同的是,只是清空表数据而已。&lt;br&gt;truncate不能删除行数据，虽然只删除数据，但是比delete彻底，它只删除表数据。&lt;/li&gt;
&lt;li&gt;delete：delete from 表名 （where 列名 = 值）&lt;br&gt;与truncate类似，delete也只删除内容、释放空间但不删除定义；但是delete即可以对行数据进行删除，也可以对整表数据进行删除。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="面试" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="数据库" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="面试" scheme="http://kunxiang.wang/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="数据库" scheme="http://kunxiang.wang/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL数据查询Demo</title>
    <link href="http://kunxiang.wang/2018/09/26/PostgreSQL%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2Demo/"/>
    <id>http://kunxiang.wang/2018/09/26/PostgreSQL数据查询Demo/</id>
    <published>2018-09-26T02:58:30.000Z</published>
    <updated>2018-09-26T05:52:57.550Z</updated>
    
    <content type="html"><![CDATA[<h4 id="创建演示数据表结构"><a href="#创建演示数据表结构" class="headerlink" title="创建演示数据表结构"></a>创建演示数据表结构</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建dept表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept (</span><br><span class="line">  d_no <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,     <span class="comment">--部门编号</span></span><br><span class="line">d_name <span class="built_in">VARCHAR</span>(<span class="number">30</span>),       <span class="comment">--部门名称</span></span><br><span class="line">d_location <span class="built_in">VARCHAR</span>(<span class="number">300</span>)   <span class="comment">--部门所在地址</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--dept表初始化数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">10</span>, <span class="string">'开发部'</span>, <span class="string">'北京市海淀区'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">20</span>, <span class="string">'测试部'</span>, <span class="string">'北京市东城区'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">30</span>, <span class="string">'销售部'</span>, <span class="string">'上海市'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">40</span>, <span class="string">'财务部'</span>, <span class="string">'广州市'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">50</span>, <span class="string">'运维部'</span>, <span class="string">'武汉市'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept <span class="keyword">VALUES</span> (<span class="number">60</span>, <span class="string">'集成部'</span>, <span class="string">'南京市'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建employee表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employee (</span><br><span class="line">  e_no <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,             <span class="comment">--雇员编号</span></span><br><span class="line">e_name <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,      <span class="comment">--雇员名称</span></span><br><span class="line">e_gender <span class="built_in">CHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,        <span class="comment">--性别，f：女，m：男</span></span><br><span class="line">dept_no <span class="built_in">INT</span>,                      <span class="comment">--所在部门编号</span></span><br><span class="line">e_job <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,       <span class="comment">--职位</span></span><br><span class="line">e_salary <span class="built_in">NUMERIC</span>(<span class="number">9</span>, <span class="number">2</span>),           <span class="comment">--工资</span></span><br><span class="line">e_hireDate <span class="built_in">DATE</span>,                  <span class="comment">--入职日期</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_emp_deptno FOREIGN <span class="keyword">KEY</span> (dept_no) <span class="keyword">REFERENCES</span> dept(d_no)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- select 语句顺序</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  &#123;* | &lt;字段列表&gt;&#125;       //查询结果字段内容</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  [</span><br><span class="line">      &lt;表<span class="number">1</span>&gt;,&lt;表<span class="number">2</span>&gt;…                       //查询数据表</span><br><span class="line">      [<span class="keyword">WHERE</span> &lt;表达式&gt;]                   //<span class="keyword">where</span>查询条件表达式</span><br><span class="line">      [<span class="keyword">GROUP</span> <span class="keyword">BY</span> &lt;<span class="keyword">group</span> <span class="keyword">by</span> definition&gt;]  //<span class="keyword">group</span> <span class="keyword">by</span>数据分组</span><br><span class="line">      [<span class="keyword">HAVING</span> &lt;expression&gt; [&#123;&lt;<span class="keyword">operator</span>&gt; &lt;expression&gt;&#125;…]]            </span><br><span class="line">      [<span class="keyword">ORDER</span> <span class="keyword">BY</span> &lt;<span class="keyword">order</span> <span class="keyword">by</span> definition&gt;]  //查询结果排序</span><br><span class="line">      [<span class="keyword">LIMIT</span> [&lt;<span class="keyword">offset</span>&gt;,] &lt;<span class="keyword">row</span> <span class="keyword">count</span>&gt;]   //限制结果显示数量</span><br><span class="line">  ]</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--初始化employee表</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">100</span>, <span class="string">'赵志军'</span>, <span class="string">'f'</span>, <span class="number">10</span>, <span class="string">'开发工程师'</span>, <span class="number">5000</span>, <span class="string">'2010-01-01'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">101</span>, <span class="string">'张铭雨'</span>, <span class="string">'f'</span>, <span class="number">10</span>, <span class="string">'开发工程师'</span>, <span class="number">6000</span>, <span class="string">'2012-04-04'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">102</span>, <span class="string">'许锋'</span>, <span class="string">'f'</span>, <span class="number">10</span>, <span class="string">'开发经理'</span>, <span class="number">8000</span>, <span class="string">'2008-01-01'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">103</span>, <span class="string">'王嘉琦'</span>, <span class="string">'m'</span>, <span class="number">20</span>, <span class="string">'测试工程师'</span>, <span class="number">4500</span>, <span class="string">'2013-08-12'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">104</span>, <span class="string">'李江新'</span>, <span class="string">'f'</span>, <span class="number">20</span>, <span class="string">'测试工程师'</span>, <span class="number">5000</span>, <span class="string">'2011-08-16'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">105</span>, <span class="string">'张海影'</span>, <span class="string">'m'</span>, <span class="number">20</span>, <span class="string">'测试经理'</span>, <span class="number">6000</span>, <span class="string">'2009-11-12'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">106</span>, <span class="string">'马恩波'</span>, <span class="string">'f'</span>, <span class="number">30</span>, <span class="string">'销售人员'</span>, <span class="number">3000</span>, <span class="string">'2014-09-01'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">107</span>, <span class="string">'李慧敏'</span>, <span class="string">'m'</span>, <span class="number">30</span>, <span class="string">'销售人员'</span>, <span class="number">5000</span>, <span class="string">'2010-08-14'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">108</span>, <span class="string">'马爽爽'</span>, <span class="string">'m'</span>, <span class="number">30</span>, <span class="string">'销售经理'</span>, <span class="number">9000</span>, <span class="string">'2006-12-02'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">109</span>, <span class="string">'史晓云'</span>, <span class="string">'m'</span>, <span class="number">30</span>, <span class="string">'销售高级经理'</span>, <span class="number">12000</span>, <span class="string">'2003-07-14'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">110</span>, <span class="string">'刘燕凤'</span>, <span class="string">'m'</span>, <span class="number">40</span>, <span class="string">'财务人员'</span>, <span class="number">3000</span>, <span class="string">'2011-06-01'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">111</span>, <span class="string">'王科'</span>, <span class="string">'f'</span>, <span class="number">40</span>, <span class="string">'财务人员'</span>, <span class="number">3500</span>, <span class="string">'2010-05-01'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">112</span>, <span class="string">'李林英'</span>, <span class="string">'m'</span>, <span class="number">40</span>, <span class="string">'财务经理'</span>, <span class="number">5000</span>, <span class="string">'2008-05-07'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">113</span>, <span class="string">'李杨'</span>, <span class="string">'f'</span>, <span class="number">10</span>, <span class="string">'实习工程师'</span>, <span class="literal">NULL</span>, <span class="string">'2015-05-07'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">114</span>, <span class="string">'李刚'</span>, <span class="string">'f'</span>, <span class="literal">NULL</span>, <span class="string">'实习工程师'</span>, <span class="literal">NULL</span>, <span class="string">'2015-05-07'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span> (<span class="number">115</span>, <span class="string">'王林'</span>, <span class="string">'f'</span>, <span class="literal">NULL</span>, <span class="string">'实习工程师'</span>, <span class="literal">NULL</span>, <span class="string">'2015-05-07'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询所有字段</span></span><br><span class="line"><span class="comment">--查询所有字段内容(使用*号通配符)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employee;</span><br><span class="line"><span class="comment">--查询所有字段内容(穷举所有字段)  --讲解一下使用*号的弊端</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_gender, dept_no, e_job, e_salary, e_hireDate <span class="keyword">FROM</span> employee;</span><br><span class="line"><span class="comment">--查询指定字段数据内容</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_hireDate <span class="keyword">FROM</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="comment">--使用别名</span></span><br><span class="line"><span class="keyword">SELECT</span> d_no, d_name, d_location <span class="keyword">FROM</span> dept;</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询指定记录，带条件查询</span></span><br><span class="line"><span class="comment">--指定条件查询数据</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_hireDate <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> e_salary = <span class="number">5000</span>;</span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_gender <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> e_gender = <span class="string">'f'</span>;</span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_salary <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> e_salary &lt; <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--复杂条件查询</span></span><br><span class="line"><span class="comment">--带IN关键字的条件查询</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, dept_no <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> dept_no <span class="keyword">IN</span> (<span class="number">20</span>, <span class="number">30</span>);</span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, dept_no <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> dept_no <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="number">20</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--带BETWEEN AND关键字的范围查询</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_hireDate <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> e_hireDate <span class="keyword">BETWEEN</span> <span class="string">'2010-01-01'</span> <span class="keyword">AND</span> <span class="string">'2015-01-01'</span>;</span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_salary <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> e_salary <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span> <span class="number">5000</span> <span class="keyword">AND</span> <span class="number">8000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--带LIKE的字符匹配查询</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> e_name <span class="keyword">LIKE</span> <span class="string">'李%'</span>;</span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> e_name <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">'李_'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询空值内容</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_salary <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> e_salary <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_salary <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> e_salary <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--带AND的多条件查询</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_gender, dept_no <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> e_gender = <span class="string">'f'</span> <span class="keyword">AND</span> dept_no = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_gender, dept_no <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> e_gender = <span class="string">'f'</span> <span class="keyword">AND</span> dept_no <span class="keyword">IN</span> (<span class="number">10</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--带OR的多条件查询</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, dept_no <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> dept_no = <span class="number">10</span> <span class="keyword">OR</span> dept_no = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, dept_no <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> dept_no <span class="keyword">IN</span> (<span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--对查询结果进行排序</span></span><br><span class="line"><span class="keyword">SELECT</span> e_salary <span class="keyword">FROM</span> employee <span class="keyword">ORDER</span> <span class="keyword">BY</span> e_salary <span class="keyword">ASC</span>;</span><br><span class="line"><span class="keyword">SELECT</span> e_salary <span class="keyword">FROM</span> employee <span class="keyword">ORDER</span> <span class="keyword">BY</span> e_salary <span class="keyword">DESC</span>;</span><br><span class="line"><span class="keyword">SELECT</span> e_salary, e_hireDate <span class="keyword">FROM</span> employee <span class="keyword">ORDER</span> <span class="keyword">BY</span> e_salary <span class="keyword">ASC</span>, e_hireDate <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--用LIMIT限制查询结果的数量</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employee <span class="keyword">LIMIT</span> <span class="number">5</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employee <span class="keyword">LIMIT</span> <span class="number">4</span> <span class="keyword">OFFSET</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--连接查询</span></span><br><span class="line"><span class="comment">--内连接查询</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_job, d_name, d_location <span class="keyword">FROM</span> employee, dept <span class="keyword">WHERE</span> dept_no = d_no;</span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, e_job, d_name, d_location <span class="keyword">FROM</span> employee <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> dept_no = d_no <span class="keyword">WHERE</span> dept_no = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--外连接查询</span></span><br><span class="line"><span class="comment">--左连接查询</span></span><br><span class="line"><span class="keyword">SELECT</span> e.e_no, e.e_name, e.dept_no, d.d_name, d.d_location <span class="keyword">FROM</span> employee e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_no = d.d_no</span><br><span class="line"><span class="comment">--右连接查询</span></span><br><span class="line"><span class="keyword">SELECT</span> e.e_no, e.e_name, e.dept_no, d.d_name, d.d_location <span class="keyword">FROM</span> employee e <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_no = d.d_no</span><br><span class="line"></span><br><span class="line"><span class="comment">--子查询</span></span><br><span class="line"><span class="comment">--带EXISTS关键字的子查询</span></span><br><span class="line"><span class="comment">-- 先在外层查询中取“学生表”的第一行记录，用该记录的相关的属性值（在内层WHERE子句中给定的）处理内层查询，若外层的WHERE子句返回“TRUE”值，则这条记录放入结果表中。然后再取下一行记录；重复上述过程直到外层表的记录全部遍历一次为止。</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> d_no <span class="keyword">FROM</span> dept <span class="keyword">WHERE</span> d_name = <span class="string">'开发部'</span>);</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> d_no <span class="keyword">FROM</span> dept <span class="keyword">WHERE</span> d_name = <span class="string">'开发部'</span>  <span class="keyword">AND</span> dept_no = d_no);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> d_no <span class="keyword">FROM</span> dept <span class="keyword">WHERE</span> d_name = <span class="string">'开发部'</span>  <span class="keyword">AND</span> dept_no = d_no);</span><br><span class="line"></span><br><span class="line"><span class="comment">--带IN关键字的子查询</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> employee <span class="keyword">WHERE</span> dept_no <span class="keyword">in</span> (<span class="keyword">select</span> d_no <span class="keyword">from</span> dept <span class="keyword">WHERE</span> d_name = <span class="string">'开发部'</span>);</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> employee <span class="keyword">WHERE</span> dept_no <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> d_no <span class="keyword">from</span> dept <span class="keyword">WHERE</span> d_name = <span class="string">'开发部'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--标量子查询</span></span><br><span class="line"><span class="keyword">SELECT</span> e.e_no, e.e_name, (<span class="keyword">SELECT</span> d_name || <span class="string">' '</span> || d_location <span class="keyword">FROM</span> dept d <span class="keyword">WHERE</span> d.d_no = e.dept_no) <span class="keyword">AS</span> address <span class="keyword">FROM</span> employee e;</span><br><span class="line"><span class="keyword">SELECT</span> e.e_no, e.e_name, (<span class="keyword">SELECT</span> <span class="keyword">concat</span>(d_name, <span class="string">'---'</span>, d_location) <span class="keyword">FROM</span> dept d <span class="keyword">WHERE</span> d.d_no = e.dept_no) <span class="keyword">AS</span> address <span class="keyword">FROM</span> employee e;</span><br><span class="line"></span><br><span class="line"><span class="comment">--合并查询结果</span></span><br><span class="line"><span class="comment">--使用UNION ALL合并结果</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, dept_no, e_salary <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> dept_no <span class="keyword">IN</span> (<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line"><span class="keyword">UNION</span> ALL</span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, dept_no, e_salary <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> e_salary &gt; <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--使用UNION合并结果</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, dept_no, e_salary <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> dept_no <span class="keyword">IN</span> (<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, dept_no, e_salary <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> e_salary &gt; <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询结果使用空值占位</span></span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, dept_no, e_salary, e_hireDate <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> dept_no <span class="keyword">IN</span> (<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line"><span class="keyword">UNION</span> ALL</span><br><span class="line"><span class="keyword">SELECT</span> e_no, e_name, dept_no, e_salary, <span class="literal">NULL</span> <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> e_salary &gt; <span class="number">5000</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;创建演示数据表结构&quot;&gt;&lt;a href=&quot;#创建演示数据表结构&quot; class=&quot;headerlink&quot; title=&quot;创建演示数据表结构&quot;&gt;&lt;/a&gt;创建演示数据表结构&lt;/h4&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--创建dept表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; dept (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  d_no &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt;,     &lt;span class=&quot;comment&quot;&gt;--部门编号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	d_name &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;),       &lt;span class=&quot;comment&quot;&gt;--部门名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	d_location &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;)   &lt;span class=&quot;comment&quot;&gt;--部门所在地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--dept表初始化数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; dept &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;开发部&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;北京市海淀区&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; dept &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;测试部&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;北京市东城区&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; dept &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;销售部&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;上海市&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; dept &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;财务部&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;广州市&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; dept &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;运维部&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;武汉市&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; dept &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;集成部&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;南京市&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--创建employee表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; employee (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  e_no &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt;,             &lt;span class=&quot;comment&quot;&gt;--雇员编号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	e_name &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,      &lt;span class=&quot;comment&quot;&gt;--雇员名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	e_gender &lt;span class=&quot;built_in&quot;&gt;CHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,        &lt;span class=&quot;comment&quot;&gt;--性别，f：女，m：男&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	dept_no &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt;,                      &lt;span class=&quot;comment&quot;&gt;--所在部门编号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	e_job &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,       &lt;span class=&quot;comment&quot;&gt;--职位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	e_salary &lt;span class=&quot;built_in&quot;&gt;NUMERIC&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;),           &lt;span class=&quot;comment&quot;&gt;--工资&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	e_hireDate &lt;span class=&quot;built_in&quot;&gt;DATE&lt;/span&gt;,                  &lt;span class=&quot;comment&quot;&gt;--入职日期&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;CONSTRAINT&lt;/span&gt; fk_emp_deptno FOREIGN &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (dept_no) &lt;span class=&quot;keyword&quot;&gt;REFERENCES&lt;/span&gt; dept(d_no)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- select 语句顺序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;* | &amp;lt;字段列表&amp;gt;&amp;#125;       //查询结果字段内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;表&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;gt;,&amp;lt;表&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;gt;…                       //查询数据表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      [&lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; &amp;lt;表达式&amp;gt;]                   //&lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt;查询条件表达式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      [&lt;span class=&quot;keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; definition&amp;gt;]  //&lt;span class=&quot;keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt;数据分组&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      [&lt;span class=&quot;keyword&quot;&gt;HAVING&lt;/span&gt; &amp;lt;expression&amp;gt; [&amp;#123;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&amp;gt; &amp;lt;expression&amp;gt;&amp;#125;…]]            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      [&lt;span class=&quot;keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; definition&amp;gt;]  //查询结果排序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      [&lt;span class=&quot;keyword&quot;&gt;LIMIT&lt;/span&gt; [&amp;lt;&lt;span class=&quot;keyword&quot;&gt;offset&lt;/span&gt;&amp;gt;,] &amp;lt;&lt;span class=&quot;keyword&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;&amp;gt;]   //限制结果显示数量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="面试" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="数据库" scheme="http://kunxiang.wang/categories/%E9%9D%A2%E8%AF%95/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="面试" scheme="http://kunxiang.wang/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="数据库" scheme="http://kunxiang.wang/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
